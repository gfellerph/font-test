{"version":3,"names":["markActiveRoute","config","activeRouteProp","compareUrl","resetOverrideConfig","hasActivePortalRoute","resetActiveStateToPortalConfig","URL","window","location","href","document","origin","error","console","warn","concat","scoreList","compileScoreList","length","winnerPair","main","isActiveOverride","sub","filter","nav","isActive","map","Object","assign","flyout","linkList","link","hadAnyActiveLink","forEach","mainNav","score","compareRoutes","url","Infinity","push","_a","linklist","sort","a","b","baseUrl","matchMode","pathname","baseSegments","__spreadArray","split","x","compareSegments","getSimilarityScore","Math","min","i","request","osFlyoutCache","getLocalizedConfig","_d","projectId","environment","language","cookieKey","localStorageKey","localizedCustomConfig","osFlyoutOverrides","fetchConfig","_e","sent","lang","getUserLang","keys","undefined","Error","localizedConfig","header","navMain","mergeOsFlyoutOverrides","setMainNavigationIds","_b","persistLanguageChoice","id","JSON","parse","stringify","mainNavText","text","mainNavTitle","title","mainNavFlyout","col","index","overrides","slice","__awaiter","isValidProjectId","generateConfigUrl","fetch","res","json","error_1","message","parsedEnvironment","toLowerCase","isProd","host","encodeURIComponent","toString","test","getLocalizedCustomConfig","customConfig","navMainEntities","navMainEntity","uniqueId","postInternetHeaderCss","PostInternetHeader","class_1","hostRef","this","lastScrollTop","scrollY","documentElement","scrollTop","lastWindowWidth","innerWidth","handleClickOutsideBound","handleClickOutside","bind","project","prototype","getCurrentLanguage","state","currentLanguage","connectedCallback","_this","throttledScroll","throttle","handleScrollEvent","debouncedResize","debounce","handleResize","addEventListener","passive","disconnectedCallback","removeEventListener","dispose","componentWillLoad","languageSwitchOverrides","languageCookieKey","languageLocalStorageKey","activeRoute","error_2","componentDidLoad","requestAnimationFrame","headerLoaded","emit","classList","add","handleLanguageChange","newValue","handleAvailableLanguagesChage","handleOsFlyoutOverrides","handleActiveRouteChange","handleCustomConfigChange","handleSearchChange","search","handleLoginChange","login","handleMetaChange","meta","handleLanguageChangeEvent","event","detail","activeDropdownElement","composedPath","includes","toggleDropdown","handleKeyUp","key","activeFlyout","st","stickyness","toggle","isMainNavOpen","handleDropdownToggled","open","element","setTimeout","setActiveFlyout","handleFlyoutToggled","toggleMobileDropdown","tagName","render","renderMetaNavigation","navMeta","isHomeLink","renderLogin","_c","isLoginWidgetHidden","loginWidgetOptions","renderLanguageSwitch","navLang","h","Host","class","packageJson","version","onKeyup","e","fullWidth","SvgSprite","If","condition","skiplinks","orientation","mode","onDropdownToggled","onClick","mobileMenu","SvgIcon","name","onFlyoutToggled","ref","el"],"sources":["src/services/route.service.ts","src/services/config.service.ts","src/components/post-internet-header/post-internet-header.scss?tag=swisspost-internet-header&encapsulation=shadow","src/components/post-internet-header/post-internet-header.tsx"],"sourcesContent":["import { ActiveRouteProp } from '../models/general.model';\r\nimport { NavMainEntity, MainNavScoreList } from '../models/header.model';\r\n\r\n/**\r\n * Activate the current route based on the config and the match mode\r\n * @param config Main Navigation Config\r\n * @param activeRouteProp Match mode\r\n * @returns Modified Main Navigation Config\r\n */\r\nexport const markActiveRoute = (\r\n  config: NavMainEntity[],\r\n  activeRouteProp: ActiveRouteProp,\r\n): NavMainEntity[] => {\r\n  // Don't highlight any route\r\n  if (activeRouteProp === false) {\r\n    return config;\r\n  }\r\n\r\n  // Set compare URL and check if activeRouteProp is valid\r\n  let compareUrl: URL;\r\n  config = resetOverrideConfig(config);\r\n\r\n  if (activeRouteProp === 'auto' || activeRouteProp === 'exact') {\r\n    // Check if an active route is already configured, set override to that and return\r\n    if (hasActivePortalRoute(config)) {\r\n      return resetActiveStateToPortalConfig(config);\r\n    }\r\n\r\n    compareUrl = new URL(window.location.href);\r\n  } else {\r\n    try {\r\n      compareUrl = new URL(activeRouteProp, document.location.origin);\r\n    } catch (error) {\r\n      console.warn(\r\n        `Active Route: ${activeRouteProp} is not a valid URL. Navigation highlighting has been disabled.`,\r\n      );\r\n      return config;\r\n    }\r\n  }\r\n\r\n  const scoreList = compileScoreList(config, compareUrl, activeRouteProp);\r\n\r\n  if (scoreList.length === 0) {\r\n    // No match found or already active links defined\r\n    return config;\r\n  }\r\n\r\n  const winnerPair = scoreList[0];\r\n  winnerPair.main.isActiveOverride = true;\r\n  if (winnerPair.sub) winnerPair.sub.isActiveOverride = true;\r\n\r\n  return config;\r\n};\r\n\r\n/**\r\n * Check if the portal config set any active route\r\n * @param config Main navigation config\r\n * @returns True if portal set any route as active\r\n */\r\nexport const hasActivePortalRoute = (config: NavMainEntity[]): boolean => {\r\n  return config.filter(nav => nav.isActive).length > 0;\r\n};\r\n\r\nexport const resetActiveStateToPortalConfig = (config: NavMainEntity[]): NavMainEntity[] => {\r\n  return config.map(nav => ({\r\n    ...nav,\r\n    isActiveOverride: nav.isActive,\r\n    flyout: nav.flyout.map(flyout => ({\r\n      ...flyout,\r\n      linkList: flyout.linkList.map(link => ({ ...link, isActiveOverride: link.isActive })),\r\n    })),\r\n  }));\r\n};\r\n\r\nconst resetOverrideConfig = (config: NavMainEntity[]): NavMainEntity[] => {\r\n  return config.map(nav => ({\r\n    ...nav,\r\n    isActiveOverride: false,\r\n    flyout: nav.flyout.map(flyout => ({\r\n      ...flyout,\r\n      linkList: flyout.linkList.map(link => ({ ...link, isActiveOverride: false })),\r\n    })),\r\n  }));\r\n};\r\n\r\n/**\r\n * Compile a list of scores based on the map mode, sorted in descending order\r\n * @param config Main Nav Config\r\n * @param compareUrl Current Browser URL or a custom URL\r\n * @param activeRouteProp Match mode\r\n * @returns A list of scored URLs if any matched\r\n */\r\nexport const compileScoreList = (\r\n  config: NavMainEntity[],\r\n  compareUrl: URL,\r\n  activeRouteProp: ActiveRouteProp,\r\n): MainNavScoreList => {\r\n  // Flag to check if the Portal set any active links or if there are any exact matches\r\n  let hadAnyActiveLink = false;\r\n  const scoreList: MainNavScoreList = [];\r\n\r\n  config.forEach(mainNav => {\r\n    if (hadAnyActiveLink || !mainNav) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const score = compareRoutes(\r\n        compareUrl,\r\n        new URL(mainNav.url),\r\n        activeRouteProp as 'auto' | 'exact',\r\n      );\r\n      if (score > 0) {\r\n        if (score === Infinity) hadAnyActiveLink = true;\r\n        scoreList.push({ main: mainNav, score });\r\n      }\r\n    } catch {\r\n      // Not a valid url, continue\r\n    }\r\n\r\n    // Loop through flyout links 2nd level\r\n    if (mainNav.flyout.length) {\r\n      mainNav.flyout.forEach(flyout => {\r\n        if (flyout.linkList) {\r\n          flyout.linkList.forEach(linklist => {\r\n            // Don't override if any link is already active\r\n            if (linklist.isActive && (activeRouteProp === 'auto' || activeRouteProp === 'exact')) {\r\n              hadAnyActiveLink = true;\r\n              return;\r\n            }\r\n\r\n            try {\r\n              const url = new URL(linklist.url);\r\n              const score = compareRoutes(compareUrl, url, activeRouteProp as 'auto' | 'exact');\r\n              if (score > 0) {\r\n                if (score === Infinity) hadAnyActiveLink = true;\r\n\r\n                // Push score\r\n                scoreList.push({\r\n                  main: mainNav,\r\n                  sub: linklist,\r\n                  score,\r\n                });\r\n              }\r\n            } catch {\r\n              // Not a valid URL, continue\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  return scoreList.sort((a, b) => b.score - a.score);\r\n};\r\n\r\n/**\r\n * Compare two URLs for similarity based on a match mode\r\n * @param baseUrl Browser URL\r\n * @param compareUrl Navigatgion URL\r\n * @param matchMode exact or auto matching\r\n * @returns Score\r\n */\r\nexport const compareRoutes = (\r\n  baseUrl: URL,\r\n  compareUrl: URL,\r\n  matchMode?: 'auto' | 'exact',\r\n): number => {\r\n  // One url is not defined or they don't share the same orign\r\n  if (!baseUrl || !compareUrl || baseUrl.origin !== compareUrl.origin) {\r\n    return 0;\r\n  }\r\n\r\n  // Exact match, origin and pathname are the same\r\n  if (baseUrl.pathname === compareUrl.pathname) {\r\n    return Infinity;\r\n  }\r\n\r\n  // The basepath is longer than the comparison, a match is impossible\r\n  if (baseUrl.pathname.length < compareUrl.pathname.length) {\r\n    return 0;\r\n  }\r\n\r\n  if (matchMode === 'auto') {\r\n    const baseSegments = [baseUrl.origin, ...baseUrl.pathname.split('/').filter(x => !!x)];\r\n    const compareSegments = [compareUrl.origin, ...compareUrl.pathname.split('/').filter(x => !!x)];\r\n\r\n    const score = getSimilarityScore(baseSegments, compareSegments);\r\n\r\n    // If only some segments match, but not the whole smaller array, it's not a match\r\n    return Math.min(baseSegments.length, compareSegments.length) === score ? score : 0;\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\n/**\r\n * Check how many items in an array match\r\n * @param a Base array\r\n * @param b Compare array\r\n * @returns Score\r\n */\r\nexport const getSimilarityScore = (a: string[], b: string[]): number => {\r\n  if (!a?.length || !b?.length) {\r\n    return 0;\r\n  }\r\n\r\n  let i = 0;\r\n  for (; i < Math.min(a.length, b.length); i++) {\r\n    if (a[i] !== b[i]) {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  return i;\r\n};\r\n","import {\r\n  Environment,\r\n  IPortalConfig,\r\n  ILocalizedConfig,\r\n  ICustomConfig,\r\n  ILocalizedCustomConfig,\r\n  LocalizedConfigParameters,\r\n} from '../models/general.model';\r\nimport { NavMainEntity } from '../models/header.model';\r\nimport { getUserLang, persistLanguageChoice } from './language.service';\r\nimport { uniqueId } from '../utils/utils';\r\nimport { markActiveRoute } from './route.service';\r\n\r\n// Prevent double requests\r\nlet request: Promise<IPortalConfig> | null = null;\r\n\r\n// Cache the original os flyout to use it for updates\r\nlet osFlyoutCache: NavMainEntity | null = null;\r\n\r\n/**\r\n * Get a localized config object\r\n *\r\n * @param projectId String identifying the project\r\n * @param language [optional] Preferred language\r\n * @returns Localized config object\r\n */\r\nexport const getLocalizedConfig = async ({\r\n  projectId,\r\n  environment,\r\n  language,\r\n  cookieKey,\r\n  localStorageKey,\r\n  activeRouteProp,\r\n  localizedCustomConfig,\r\n  osFlyoutOverrides,\r\n}: LocalizedConfigParameters): Promise<ILocalizedConfig> => {\r\n  if (!request) {\r\n    request = fetchConfig(projectId, environment);\r\n  }\r\n\r\n  const config = await request;\r\n  const lang = getUserLang(Object.keys(config), language, localStorageKey, cookieKey);\r\n\r\n  if (lang === undefined) {\r\n    throw new Error('Internet Header: unable to determine current language');\r\n  }\r\n\r\n  // Clone config for more predictable state updates\r\n  let localizedConfig: ILocalizedConfig = { ...config[lang] };\r\n\r\n  // Merge custom config with portal config\r\n  if (localizedCustomConfig) {\r\n    const header = localizedCustomConfig?.header?.navMain\r\n      ? {\r\n          ...localizedConfig.header,\r\n          navMain: [...localizedConfig.header.navMain, ...localizedCustomConfig.header.navMain],\r\n        }\r\n      : localizedConfig.header;\r\n    localizedConfig = {\r\n      ...localizedConfig,\r\n      header,\r\n    };\r\n  }\r\n\r\n  // Add entries to flyout_os\r\n  if (osFlyoutOverrides)\r\n    localizedConfig.header.navMain = mergeOsFlyoutOverrides(localizedConfig, osFlyoutOverrides);\r\n\r\n  // Mark active route\r\n  if (activeRouteProp)\r\n    localizedConfig.header.navMain = markActiveRoute(\r\n      localizedConfig.header.navMain,\r\n      activeRouteProp,\r\n    );\r\n\r\n  setMainNavigationIds(localizedConfig?.header?.navMain);\r\n\r\n  // Set the new language choice\r\n  persistLanguageChoice(lang, cookieKey, localStorageKey);\r\n\r\n  return localizedConfig;\r\n};\r\n\r\n/**\r\n * Merge portal config with custom os flyout overrides\r\n * @param config Localized config\r\n * @param osFlyoutOverrides Overrides for the flyout\r\n * @returns Merged localized config\r\n */\r\nexport const mergeOsFlyoutOverrides = (\r\n  config: ILocalizedConfig,\r\n  osFlyoutOverrides: NavMainEntity,\r\n): NavMainEntity[] => {\r\n  if (!osFlyoutOverrides) return config.header.navMain;\r\n\r\n  return config.header.navMain.map(mainNav => {\r\n    if (mainNav.id !== 'flyout_os') return mainNav;\r\n\r\n    if (osFlyoutCache === null) {\r\n      osFlyoutCache = JSON.parse(JSON.stringify(mainNav)) as NavMainEntity;\r\n    }\r\n\r\n    const mainNavText = osFlyoutOverrides.text ?? osFlyoutCache.text;\r\n    const mainNavTitle = osFlyoutOverrides.title ?? osFlyoutCache.title;\r\n\r\n    if (\r\n      !osFlyoutCache.flyout ||\r\n      osFlyoutCache.flyout.length === 0 ||\r\n      !osFlyoutOverrides.flyout ||\r\n      osFlyoutOverrides.flyout.length === 0\r\n    )\r\n      return {\r\n        ...mainNav,\r\n        title: mainNavTitle,\r\n        text: mainNavText,\r\n      };\r\n\r\n    // Add entries for os flyout columns without overriding existing config\r\n    const mainNavFlyout = [\r\n      ...osFlyoutCache.flyout.map((col, index) => {\r\n        const overrides = osFlyoutOverrides.flyout[index];\r\n        const title = overrides.title ?? col.title;\r\n\r\n        const linkList = overrides.linkList ? osFlyoutOverrides.flyout[index].linkList : [];\r\n\r\n        return {\r\n          title,\r\n          linkList: [...col.linkList, ...linkList],\r\n        };\r\n      }),\r\n      ...osFlyoutOverrides.flyout.slice(osFlyoutCache.flyout.length),\r\n    ];\r\n\r\n    return {\r\n      ...mainNav,\r\n      text: mainNavText,\r\n      title: mainNavTitle,\r\n      flyout: mainNavFlyout,\r\n    } as NavMainEntity;\r\n  });\r\n};\r\n\r\n/**\r\n * Fetch the general config based on project id\r\n *\r\n * @returns Promise for Post Portal general config\r\n */\r\nexport const fetchConfig = async (\r\n  projectId: string,\r\n  environment: Environment,\r\n): Promise<IPortalConfig> => {\r\n  // Check if project id is sanitized\r\n  if (!isValidProjectId(projectId)) {\r\n    throw new Error(`Internet Header: invalid project id \"${projectId}\"`);\r\n  }\r\n\r\n  if (projectId === 'test') {\r\n    environment = 'int01';\r\n  }\r\n\r\n  let url = generateConfigUrl(projectId, environment);\r\n\r\n  // Get the config if cache is invalid\r\n  try {\r\n    const res = await fetch(url);\r\n    return (await res.json()) as IPortalConfig;\r\n  } catch (error) {\r\n    throw new Error(`Internet Header: fetching config failed. ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Generate an URL with all necessary query params to get the configuration.\r\n * Project id \"test\" will return a test configuration\r\n * @param projectId string\r\n * @param environment int01, int02 or prod\r\n * @returns URL pointing to the project config\r\n */\r\nexport const generateConfigUrl = (projectId: string, environment: Environment): string => {\r\n  if (projectId === 'test') return 'assets/config/test-configuration.json';\r\n\r\n  const parsedEnvironment = environment.toLowerCase();\r\n  const isProd = parsedEnvironment === 'prod';\r\n  const host = `https://${isProd ? 'www' : 'int'}.post.ch`;\r\n  try {\r\n    // Use URL to validate the generated URL\r\n    return new URL(\r\n      `${host}/api/headerjs/Json?serviceid=${encodeURIComponent(projectId)}${\r\n        !isProd ? '&environment=' + parsedEnvironment : ''\r\n      }`,\r\n    ).toString();\r\n  } catch (error) {\r\n    throw new Error(`Internet Header: Config URL is invalid.`);\r\n  }\r\n};\r\n\r\n/**\r\n * Check if project id contains only URL safe characters\r\n *\r\n * @param projectId Project Id string\r\n * @returns The valid project id\r\n */\r\nexport const isValidProjectId = (projectId: string): boolean => {\r\n  return projectId !== '' && projectId.length > 0 && /^[a-zA-Z][\\w-]*[a-zA-Z0-9]$/.test(projectId);\r\n};\r\n\r\n/**\r\n * Get the localized config object from a custom config\r\n *\r\n * @param config String or json object of the custom config\r\n * @param language Specific language\r\n * @returns Localized custom config object\r\n */\r\nexport const getLocalizedCustomConfig = (\r\n  config: string | ICustomConfig,\r\n  language: string,\r\n): ILocalizedCustomConfig | undefined => {\r\n  let customConfig: ICustomConfig;\r\n  try {\r\n    customConfig = typeof config === 'string' ? JSON.parse(config) : config;\r\n  } catch (error) {\r\n    throw new Error(\r\n      `Internet Header: Custom config is invalid. Make sure your custom config contains valid JSON syntax and matches the definition. `,\r\n    );\r\n  }\r\n  let localizedCustomConfig: ILocalizedCustomConfig | undefined = customConfig[language];\r\n  if (localizedCustomConfig?.header?.navMain)\r\n    setMainNavigationIds(localizedCustomConfig.header.navMain);\r\n  return localizedCustomConfig;\r\n};\r\n\r\n/**\r\n * Check if mobile header styles are applied or not\r\n * @returns True if browser is smaller than 1024px\r\n */\r\nexport const isMobile = () => window.innerWidth < 1024;\r\n\r\n/**\r\n * Set unique ID's on main navigation entities but conserve flyout_os to be able to\r\n * identify the online-service flyout, which can be configured by osFlyoutOverrides\r\n */\r\nexport const setMainNavigationIds = (navMainEntities: NavMainEntity[]): void => {\r\n  navMainEntities.forEach(navMainEntity => {\r\n    navMainEntity.id = navMainEntity.id === 'flyout_os' ? navMainEntity.id : uniqueId('main-nav-');\r\n  });\r\n};\r\n","@use '@swisspost/design-system-styles/variables/color';\r\n@use '../../utils/utils.scss';\r\n@use '../../utils/mixins.scss';\r\n\r\n:host {\r\n  display: block;\r\n  position: relative;\r\n  font-size: 1rem;\r\n  font-weight: 300;\r\n  z-index: var(--header-z-index, 10);\r\n\r\n  --header-height: 3.5rem; // 56px\r\n  --meta-header-height: 0px; // Not visible on mobile\r\n  --language-dropdown-margin-top: 0px;\r\n\r\n  @include mixins.min(lg) {\r\n    --meta-header-height: 3rem; // 48px\r\n    --header-height: 4rem; // 64px\r\n  }\r\n\r\n  @include mixins.min(xl) {\r\n    --header-height: 4.5rem; // 72px\r\n  }\r\n}\r\n\r\n// Set height to 0 if meta is never visible\r\n:host([meta='false']) {\r\n  --meta-header-height: 0px;\r\n  // Compensation for header border-bottom, when language dropdown is displayed within main navigation controls\r\n  --language-dropdown-margin-top: 1px;\r\n}\r\n\r\n// Support different kinds of stickyness modes\r\n// Works only in combination with setting header heights dynamically\r\n@supports (position: sticky) {\r\n  // If stickyness is none, simply apply no styles, all others are sticky\r\n  :host(:not(.stickyness-none)) {\r\n    position: sticky;\r\n  }\r\n\r\n  // Everything is always sticky\r\n  :host(.stickyness-full) {\r\n    top: 0;\r\n  }\r\n\r\n  // Only main nav is sticky\r\n  :host(.stickyness-main) {\r\n    top: calc(var(--meta-header-height, 0px) * -1);\r\n  }\r\n\r\n  // Hide everything\r\n  :host(.stickyness-minimal) {\r\n    top: calc((var(--header-height, 0px) + var(--meta-header-height, 0px)) * -1);\r\n    transition: top 200ms ease-in;\r\n  }\r\n\r\n  // Show main when scrolling up or any of the menus are open\r\n  :host(.stickyness-minimal.scrolling-up),\r\n  :host(.stickyness-minimal.dropdown-open) {\r\n    top: calc(var(--meta-header-height, 0px) * -1);\r\n    transition: top 200ms ease-out;\r\n  }\r\n}\r\n\r\n.post-internet-header {\r\n  border-bottom: 1px solid color.$gray-10;\r\n  background-color: white;\r\n}\r\n\r\n.main-navigation-container {\r\n  display: flex;\r\n\r\n  & > .main-navigation-controls {\r\n    flex: 0 0 auto;\r\n  }\r\n}\r\n\r\n.main-navigation {\r\n  display: flex;\r\n}\r\n\r\n.sub-navigation-container {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  background: white;\r\n  visibility: hidden;\r\n}\r\n\r\n.main-navigation-item:hover .sub-navigation-container {\r\n  visibility: visible;\r\n}\r\n\r\n.main-navigation-controls {\r\n  display: flex;\r\n  margin-left: auto;\r\n\r\n  @include mixins.max(lg) {\r\n    font-weight: 400;\r\n  }\r\n\r\n  @include mixins.min(lg) {\r\n    font-size: 1.0625rem;\r\n  }\r\n\r\n  & > * {\r\n    border-left: 1px solid color.$gray-10;\r\n  }\r\n}\r\n\r\n.menu-button {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 calc(1rem - 1px);\r\n  font-weight: 300;\r\n  cursor: pointer;\r\n  border-left: 1px solid color.$gray-10;\r\n  order: 1; /* Display on the far right because of tab order */\r\n\r\n  @include mixins.min(lg) {\r\n    display: none;\r\n  }\r\n\r\n  .visually-hidden {\r\n    @include mixins.between(rg, lg) {\r\n      @include mixins.reset-visually-hidden();\r\n\r\n      margin-right: 0.5rem;\r\n    }\r\n  }\r\n\r\n  svg {\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n  }\r\n}\r\n\r\n.full-width {\r\n  .wide-container {\r\n    max-width: none;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Element,\r\n  h,\r\n  State,\r\n  Prop,\r\n  Watch,\r\n  Listen,\r\n  EventEmitter,\r\n  Event,\r\n  Method,\r\n} from '@stencil/core';\r\nimport { debounce, throttle } from 'throttle-debounce';\r\nimport {\r\n  getLocalizedConfig,\r\n  getLocalizedCustomConfig,\r\n  isValidProjectId,\r\n} from '../../services/config.service';\r\nimport { state, dispose } from '../../data/store';\r\nimport { DropdownElement, DropdownEvent, NavMainEntity } from '../../models/header.model';\r\nimport { SvgSprite } from '../../utils/svg-sprite.component';\r\nimport { SvgIcon } from '../../utils/svg-icon.component';\r\nimport { StickynessOptions } from '../../models/implementor.model';\r\nimport { ActiveRouteProp, Environment, ICustomConfig } from '../../models/general.model';\r\nimport { IAvailableLanguage } from '../../models/language.model';\r\nimport { If } from '../../utils/if.component';\r\nimport packageJson from '../../../package.json';\r\n\r\n@Component({\r\n  tag: 'swisspost-internet-header',\r\n  styleUrl: 'post-internet-header.scss',\r\n  shadow: true,\r\n})\r\nexport class PostInternetHeader {\r\n  /**\r\n   * Your project id, previously passed as query string parameter serviceId.\r\n   */\r\n  @Prop() project: string;\r\n\r\n  /**\r\n   * Sticky behaviour of the header.\r\n   */\r\n  @Prop() stickyness: StickynessOptions = 'minimal';\r\n\r\n  /**\r\n   * Initial language to be used. Overrides automatic language detection.\r\n   */\r\n  @Prop() language?: string;\r\n\r\n  /**\r\n   * Toggle the meta navigation.\r\n   */\r\n  @Prop() meta: boolean = true;\r\n\r\n  /**\r\n   * Toggle the login link (when logged out) or the user widget (when logged in).\r\n   */\r\n  @Prop() login: boolean = true;\r\n\r\n  /**\r\n   * Toggle the search button.\r\n   */\r\n  @Prop() search: boolean = true;\r\n\r\n  /**\r\n   * Toggle skiplinks. They help keyboard users to quickly jump to important sections of the page.\r\n   */\r\n  @Prop() skiplinks: boolean = true;\r\n\r\n  /**\r\n   * DEPRECATED!: Define a proxy URL for the config fetch request. Will be removed in the next major version\r\n   */\r\n  @Prop() configProxy?: string;\r\n\r\n  /**\r\n   * Target environment. Choose 'int01' for local testing.\r\n   */\r\n  @Prop() environment: Environment = 'prod';\r\n\r\n  /**\r\n   * Override the language switch links with custom URLs. Helpful when your application contains sub-pages and you\r\n   * would like to stay on subpages when the user changes language.\r\n   */\r\n  @Prop() languageSwitchOverrides?: string | IAvailableLanguage[];\r\n\r\n  /**\r\n   * Customize the header config loaded from the post portal.\r\n   */\r\n  @Prop() customConfig?: string | ICustomConfig;\r\n\r\n  /**\r\n   * The header uses this cookie to set the language. Disables automatic language detection.\r\n   */\r\n  @Prop() languageCookieKey?: string;\r\n\r\n  /**\r\n   * The header uses this local storage key to set the language. Disables automatic language selection.\r\n   */\r\n  @Prop() languageLocalStorageKey?: string = 'swisspost-internet-header-language';\r\n\r\n  /**\r\n   * Set the currently activated route. If there is a link matching this URL in the header, it will be highlighted.\r\n   * Will also highlight partly matching URLs. When set to auto, will use current location.href for comparison.\r\n   */\r\n  @Prop() activeRoute?: 'auto' | false | string = 'auto';\r\n\r\n  /**\r\n   * Online Services only: Add custom links to the special online service navigation entry\r\n   */\r\n  @Prop() osFlyoutOverrides?: string | NavMainEntity;\r\n\r\n  /**\r\n   * Displays the header at full width for full-screen applications\r\n   */\r\n  @Prop() fullWidth?: boolean = false;\r\n\r\n  /**\r\n   * Fires when the header has been rendered to the page.\r\n   */\r\n  @Event() headerLoaded: EventEmitter<void>;\r\n\r\n  @State() activeFlyout: string | null = null;\r\n  @State() activeDropdownElement: DropdownElement | null = null;\r\n  @Element() host: HTMLElement;\r\n\r\n  /**\r\n   * Get the currently set language as a two letter string (\"de\", \"fr\" \"it\" or \"en\")\r\n   * @returns string\r\n   */\r\n  @Method()\r\n  async getCurrentLanguage(): Promise<'de' | 'fr' | 'it' | 'en' | string> {\r\n    return state.currentLanguage ?? 'de';\r\n  }\r\n\r\n  private mainNav?: HTMLPostMainNavigationElement;\r\n  private lastScrollTop = window.scrollY || document.documentElement.scrollTop;\r\n  private throttledScroll: throttle<() => void>;\r\n  private debouncedResize: debounce<() => void>;\r\n  private lastWindowWidth: number = window.innerWidth;\r\n\r\n  constructor() {\r\n    if (this.project === undefined || this.project === '' || !isValidProjectId(this.project)) {\r\n      throw new Error(\r\n        `Internet Header project key is \"${this.project}\". Please provide a valid project key.`,\r\n      );\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.throttledScroll = throttle(300, () => this.handleScrollEvent());\r\n    this.debouncedResize = debounce(200, () => this.handleResize());\r\n    window.addEventListener('scroll', this.throttledScroll, { passive: true });\r\n    window.addEventListener('resize', this.debouncedResize, { passive: true });\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    window.removeEventListener('scroll', this.throttledScroll);\r\n    window.removeEventListener('resize', this.debouncedResize);\r\n\r\n    // Reset the store to its original state\r\n    dispose();\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    // Wait for the config to arrive, then render the header\r\n    try {\r\n      state.projectId = this.project;\r\n      state.environment = this.environment;\r\n      if (this.language !== undefined) state.currentLanguage = this.language;\r\n      state.languageSwitchOverrides =\r\n        typeof this.languageSwitchOverrides === 'string'\r\n          ? JSON.parse(this.languageSwitchOverrides)\r\n          : this.languageSwitchOverrides;\r\n      state.osFlyoutOverrides =\r\n        typeof this.osFlyoutOverrides === 'string'\r\n          ? JSON.parse(this.osFlyoutOverrides)\r\n          : this.osFlyoutOverrides;\r\n\r\n      if (this.customConfig !== undefined && state.currentLanguage !== null) {\r\n        state.localizedCustomConfig = getLocalizedCustomConfig(\r\n          this.customConfig,\r\n          state.currentLanguage,\r\n        );\r\n      }\r\n\r\n      state.localizedConfig = await getLocalizedConfig({\r\n        projectId: this.project,\r\n        environment: this.environment,\r\n        language: this.language,\r\n        cookieKey: this.languageCookieKey,\r\n        localStorageKey: this.languageLocalStorageKey,\r\n        activeRouteProp: this.activeRoute,\r\n        localizedCustomConfig: state.localizedCustomConfig,\r\n        osFlyoutOverrides: state.osFlyoutOverrides,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  componentDidLoad() {\r\n    window.requestAnimationFrame(() => {\r\n      this.handleResize();\r\n      this.headerLoaded.emit();\r\n      this.host.classList.add('header-loaded');\r\n    });\r\n  }\r\n\r\n  @Watch('language')\r\n  async handleLanguageChange(newValue: string) {\r\n    state.currentLanguage = newValue;\r\n    state.localizedConfig = await getLocalizedConfig({\r\n      projectId: this.project,\r\n      environment: this.environment,\r\n      language: newValue,\r\n      cookieKey: this.languageCookieKey,\r\n      localStorageKey: this.languageLocalStorageKey,\r\n      activeRouteProp: this.activeRoute,\r\n      localizedCustomConfig: state.localizedCustomConfig,\r\n      osFlyoutOverrides: state.osFlyoutOverrides,\r\n    });\r\n    if (this.customConfig)\r\n      state.localizedCustomConfig = getLocalizedCustomConfig(this.customConfig, newValue);\r\n  }\r\n\r\n  @Watch('languageSwitchOverrides')\r\n  handleAvailableLanguagesChage(newValue: string | IAvailableLanguage[]) {\r\n    state.languageSwitchOverrides = typeof newValue === 'string' ? JSON.parse(newValue) : newValue;\r\n  }\r\n\r\n  @Watch('osFlyoutOverrides')\r\n  async handleOsFlyoutOverrides(newValue: string | NavMainEntity) {\r\n    state.osFlyoutOverrides = typeof newValue === 'string' ? JSON.parse(newValue) : newValue;\r\n    state.localizedConfig = await getLocalizedConfig({\r\n      projectId: this.project,\r\n      environment: this.environment,\r\n      language: this.language,\r\n      cookieKey: this.languageCookieKey,\r\n      localStorageKey: this.languageLocalStorageKey,\r\n      activeRouteProp: this.activeRoute,\r\n      localizedCustomConfig: state.localizedCustomConfig,\r\n      osFlyoutOverrides: state.osFlyoutOverrides,\r\n    });\r\n  }\r\n\r\n  @Watch('activeRoute')\r\n  async handleActiveRouteChange(newValue: string | ActiveRouteProp) {\r\n    state.localizedConfig = await getLocalizedConfig({\r\n      projectId: this.project,\r\n      environment: this.environment,\r\n      language: this.language,\r\n      cookieKey: this.languageCookieKey,\r\n      localStorageKey: this.languageLocalStorageKey,\r\n      activeRouteProp: newValue,\r\n      localizedCustomConfig: state.localizedCustomConfig,\r\n      osFlyoutOverrides: state.osFlyoutOverrides,\r\n    });\r\n  }\r\n\r\n  @Watch('customConfig')\r\n  async handleCustomConfigChange(newValue: string | ICustomConfig) {\r\n    if (this.language === undefined) return;\r\n    const localizedCustomConfig = getLocalizedCustomConfig(newValue, this.language);\r\n    state.localizedCustomConfig = localizedCustomConfig;\r\n    state.localizedConfig = await getLocalizedConfig({\r\n      projectId: this.project,\r\n      environment: this.environment,\r\n      language: this.language,\r\n      cookieKey: this.languageCookieKey,\r\n      localStorageKey: this.languageLocalStorageKey,\r\n      activeRouteProp: this.activeRoute,\r\n      localizedCustomConfig: localizedCustomConfig,\r\n      osFlyoutOverrides: state.osFlyoutOverrides,\r\n    });\r\n  }\r\n\r\n  @Watch('search')\r\n  handleSearchChange(newValue: boolean) {\r\n    state.search = newValue;\r\n  }\r\n\r\n  @Watch('login')\r\n  handleLoginChange(newValue: boolean) {\r\n    state.login = newValue;\r\n  }\r\n\r\n  @Watch('meta')\r\n  handleMetaChange(newValue: boolean) {\r\n    state.meta = newValue;\r\n  }\r\n\r\n  @Listen('languageChanged')\r\n  handleLanguageChangeEvent(event: CustomEvent<string>) {\r\n    this.handleLanguageChange(event.detail);\r\n  }\r\n\r\n  private handleClickOutsideBound = this.handleClickOutside.bind(this);\r\n\r\n  private handleClickOutside(event: Event) {\r\n    // Close active dropdown element on click outside of it\r\n    if (this.activeDropdownElement && !event.composedPath().includes(this.activeDropdownElement)) {\r\n      this.activeDropdownElement.toggleDropdown(false);\r\n    }\r\n  }\r\n\r\n  private handleKeyUp(event: KeyboardEvent) {\r\n    if (event.key === 'Escape') {\r\n      if (this.activeDropdownElement) {\r\n        this.activeDropdownElement.toggleDropdown(false);\r\n      }\r\n      if (this.activeFlyout !== null && this.mainNav) {\r\n        this.mainNav.toggleDropdown(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleScrollEvent() {\r\n    // Credits: \"https://github.com/qeremy/so/blob/master/so.dom.js#L426\"\r\n    const st = window.scrollY || document.documentElement.scrollTop;\r\n\r\n    // Toggle class without re-rendering the component if stickyness is minimal\r\n    // the other stickyness modes do not need the class\r\n    if (this.stickyness === 'minimal') {\r\n      this.host.classList.toggle('scrolling-up', st <= this.lastScrollTop);\r\n    }\r\n\r\n    // For Mobile or negative scrolling\r\n    this.lastScrollTop = st <= 0 ? 0 : st;\r\n  }\r\n\r\n  private handleResize() {\r\n    // Close main navigation dropdown if size changed to bigger than 1024px (search dropdown will be kept open)\r\n    if (this.isMainNavOpen() && this.lastWindowWidth < 1024 && window.innerWidth >= 1024) {\r\n      this.activeDropdownElement?.toggleDropdown(false);\r\n    }\r\n\r\n    this.lastWindowWidth = window.innerWidth;\r\n  }\r\n\r\n  /**\r\n   * Close open dropdown menus if another is being opened\r\n   *\r\n   * @param event Dropdown toggled event\r\n   * @returns void\r\n   */\r\n  private handleDropdownToggled(event: CustomEvent<DropdownEvent>) {\r\n    if (!event.detail.open && this.activeDropdownElement !== event.detail.element) {\r\n      // Some dropdown got closed programmatically (possibly by this function). To prevent\r\n      // a circle or an outdated state, we'll not handle this event\r\n      return;\r\n    }\r\n\r\n    if (event.detail.open === true) {\r\n      if (this.activeDropdownElement) {\r\n        this.activeDropdownElement.toggleDropdown(false);\r\n      }\r\n\r\n      this.activeDropdownElement = event.detail.element;\r\n\r\n      if (window.innerWidth >= 1024) {\r\n        // Add event listener to close active dropdown element on click outsite of it\r\n        // Also adds 10ms delay in case of an external interaction:\r\n        //    Some button on the page calls toggleDropdown() -> dropdown opens\r\n        //    Click event bubbles to the window, this.handleClickOutsideBound closes dropdown again\r\n        window.setTimeout(() => {\r\n          window.addEventListener('click', this.handleClickOutsideBound);\r\n        }, 10);\r\n      }\r\n\r\n      if (this.activeFlyout !== null && this.mainNav) {\r\n        this.mainNav.setActiveFlyout(null);\r\n      }\r\n    } else {\r\n      this.activeDropdownElement = null;\r\n\r\n      // Remove event listener as it is not needed if no dropdown element is active\r\n      window.removeEventListener('click', this.handleClickOutsideBound);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close open dropdowns if the flyout is being opened\r\n   * @param event Flyout toggle event\r\n   */\r\n  private handleFlyoutToggled(event: CustomEvent<string | null>) {\r\n    this.activeFlyout = event.detail;\r\n\r\n    if (this.activeDropdownElement && event.detail && !this.isMainNavOpen()) {\r\n      this.activeDropdownElement.toggleDropdown(false);\r\n    }\r\n  }\r\n\r\n  private toggleMobileDropdown() {\r\n    this.mainNav?.toggleDropdown();\r\n  }\r\n\r\n  private isMainNavOpen() {\r\n    return (\r\n      this.activeDropdownElement && this.activeDropdownElement.tagName === 'POST-MAIN-NAVIGATION'\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (!state.localizedConfig?.header) {\r\n      console.error(new Error('Internet Header: Config cannot be loaded'));\r\n      return;\r\n    }\r\n\r\n    const config = state.localizedConfig;\r\n    const renderMetaNavigation =\r\n      this.meta &&\r\n      config.header.navMeta !== undefined &&\r\n      config.header.navMeta?.filter(meta => !meta.isHomeLink).length > 0;\r\n    const renderLogin =\r\n      (this.login ?? !config.header.isLoginWidgetHidden) && config.header.loginWidgetOptions;\r\n    const renderLanguageSwitch = config.header.navLang.length > 1;\r\n\r\n    return (\r\n      <Host\r\n        class={`stickyness-${this.stickyness} ${\r\n          this.activeDropdownElement || this.activeFlyout ? 'dropdown-open' : ''\r\n        }`}\r\n        data-version={packageJson.version}\r\n        onKeyup={(e: KeyboardEvent) => this.handleKeyUp(e)}\r\n      >\r\n        <header class={`post-internet-header${this.fullWidth ? ' full-width' : ''}`}>\r\n          <SvgSprite />\r\n          <If condition={this.skiplinks === true}>\r\n            <post-skiplinks></post-skiplinks>\r\n          </If>\r\n          <If condition={renderMetaNavigation === true}>\r\n            <post-meta-navigation\r\n              orientation=\"horizontal\"\r\n              class=\"hidden-lg\"\r\n              full-width={this.fullWidth}\r\n            >\r\n              <If condition={renderLanguageSwitch === true}>\r\n                <post-language-switch\r\n                  id=\"post-language-switch-desktop\"\r\n                  mode=\"dropdown\"\r\n                  onDropdownToggled={e => this.handleDropdownToggled(e)}\r\n                ></post-language-switch>\r\n              </If>\r\n            </post-meta-navigation>\r\n          </If>\r\n          <div class=\"main-navigation-container wide-container\">\r\n            <post-logo></post-logo>\r\n            <button class=\"menu-button nav-link\" onClick={() => this.toggleMobileDropdown()}>\r\n              <span class=\"menu-button-text visually-hidden\">{config.header.mobileMenu.text}</span>\r\n              <SvgIcon name={this.isMainNavOpen() ? 'pi-close' : 'pi-menu'}></SvgIcon>\r\n            </button>\r\n            <post-main-navigation\r\n              onDropdownToggled={e => this.handleDropdownToggled(e)}\r\n              onFlyoutToggled={e => this.handleFlyoutToggled(e)}\r\n              ref={el => (this.mainNav = el)}\r\n            >\r\n              <If condition={renderMetaNavigation === true}>\r\n                <post-meta-navigation orientation=\"vertical\">\r\n                  <If condition={renderLanguageSwitch === true}>\r\n                    <post-language-switch\r\n                      id=\"post-language-switch-mobile\"\r\n                      mode=\"list\"\r\n                    ></post-language-switch>\r\n                  </If>\r\n                </post-meta-navigation>\r\n              </If>\r\n            </post-main-navigation>\r\n            <div class=\"main-navigation-controls\">\r\n              <If condition={this.search !== false}>\r\n                <post-search onDropdownToggled={e => this.handleDropdownToggled(e)}></post-search>\r\n              </If>\r\n              <If condition={!!renderLogin}>\r\n                <post-klp-login-widget>\r\n                  <slot name=\"login-widget\"></slot>\r\n                </post-klp-login-widget>\r\n              </If>\r\n              <If condition={renderMetaNavigation === false && renderLanguageSwitch === true}>\r\n                <post-language-switch\r\n                  id=\"post-language-switch-no-meta\"\r\n                  onDropdownToggled={e => this.handleDropdownToggled(e)}\r\n                  mode=\"dropdown\"\r\n                ></post-language-switch>\r\n              </If>\r\n              <slot name=\"main\"></slot>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}