{"file":"swisspost-internet-header.entry.cjs.js","mappings":"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","names":["getUserLang","persistLanguageChoice","uniqueId","state","throttle","debounce","dispose","h","Host","SvgSprite","If","SvgIcon"],"sources":["./src/services/route.service.ts","./src/services/config.service.ts","./src/components/post-internet-header/post-internet-header.scss?tag=swisspost-internet-header&encapsulation=shadow","./src/components/post-internet-header/post-internet-header.tsx"],"sourcesContent":["import { ActiveRouteProp } from '../models/general.model';\r\nimport { NavMainEntity, MainNavScoreList } from '../models/header.model';\r\n\r\n/**\r\n * Activate the current route based on the config and the match mode\r\n * @param config Main Navigation Config\r\n * @param activeRouteProp Match mode\r\n * @returns Modified Main Navigation Config\r\n */\r\nexport const markActiveRoute = (\r\n  config: NavMainEntity[],\r\n  activeRouteProp: ActiveRouteProp,\r\n): NavMainEntity[] => {\r\n  // Don't highlight any route\r\n  if (activeRouteProp === false) {\r\n    return config;\r\n  }\r\n\r\n  // Set compare URL and check if activeRouteProp is valid\r\n  let compareUrl: URL;\r\n  config = resetOverrideConfig(config);\r\n\r\n  if (activeRouteProp === 'auto' || activeRouteProp === 'exact') {\r\n    // Check if an active route is already configured, set override to that and return\r\n    if (hasActivePortalRoute(config)) {\r\n      return resetActiveStateToPortalConfig(config);\r\n    }\r\n\r\n    compareUrl = new URL(window.location.href);\r\n  } else {\r\n    try {\r\n      compareUrl = new URL(activeRouteProp, document.location.origin);\r\n    } catch (error) {\r\n      console.warn(\r\n        `Active Route: ${activeRouteProp} is not a valid URL. Navigation highlighting has been disabled.`,\r\n      );\r\n      return config;\r\n    }\r\n  }\r\n\r\n  const scoreList = compileScoreList(config, compareUrl, activeRouteProp);\r\n\r\n  if (scoreList.length === 0) {\r\n    // No match found or already active links defined\r\n    return config;\r\n  }\r\n\r\n  const winnerPair = scoreList[0];\r\n  winnerPair.main.isActiveOverride = true;\r\n  if (winnerPair.sub) winnerPair.sub.isActiveOverride = true;\r\n\r\n  return config;\r\n};\r\n\r\n/**\r\n * Check if the portal config set any active route\r\n * @param config Main navigation config\r\n * @returns True if portal set any route as active\r\n */\r\nexport const hasActivePortalRoute = (config: NavMainEntity[]): boolean => {\r\n  return config.filter(nav => nav.isActive).length > 0;\r\n};\r\n\r\nexport const resetActiveStateToPortalConfig = (config: NavMainEntity[]): NavMainEntity[] => {\r\n  return config.map(nav => ({\r\n    ...nav,\r\n    isActiveOverride: nav.isActive,\r\n    flyout: nav.flyout.map(flyout => ({\r\n      ...flyout,\r\n      linkList: flyout.linkList.map(link => ({ ...link, isActiveOverride: link.isActive })),\r\n    })),\r\n  }));\r\n};\r\n\r\nconst resetOverrideConfig = (config: NavMainEntity[]): NavMainEntity[] => {\r\n  return config.map(nav => ({\r\n    ...nav,\r\n    isActiveOverride: false,\r\n    flyout: nav.flyout.map(flyout => ({\r\n      ...flyout,\r\n      linkList: flyout.linkList.map(link => ({ ...link, isActiveOverride: false })),\r\n    })),\r\n  }));\r\n};\r\n\r\n/**\r\n * Compile a list of scores based on the map mode, sorted in descending order\r\n * @param config Main Nav Config\r\n * @param compareUrl Current Browser URL or a custom URL\r\n * @param activeRouteProp Match mode\r\n * @returns A list of scored URLs if any matched\r\n */\r\nexport const compileScoreList = (\r\n  config: NavMainEntity[],\r\n  compareUrl: URL,\r\n  activeRouteProp: ActiveRouteProp,\r\n): MainNavScoreList => {\r\n  // Flag to check if the Portal set any active links or if there are any exact matches\r\n  let hadAnyActiveLink = false;\r\n  const scoreList: MainNavScoreList = [];\r\n\r\n  config.forEach(mainNav => {\r\n    if (hadAnyActiveLink || !mainNav) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const score = compareRoutes(\r\n        compareUrl,\r\n        new URL(mainNav.url),\r\n        activeRouteProp as 'auto' | 'exact',\r\n      );\r\n      if (score > 0) {\r\n        if (score === Infinity) hadAnyActiveLink = true;\r\n        scoreList.push({ main: mainNav, score });\r\n      }\r\n    } catch {\r\n      // Not a valid url, continue\r\n    }\r\n\r\n    // Loop through flyout links 2nd level\r\n    if (mainNav.flyout.length) {\r\n      mainNav.flyout.forEach(flyout => {\r\n        if (flyout.linkList) {\r\n          flyout.linkList.forEach(linklist => {\r\n            // Don't override if any link is already active\r\n            if (linklist.isActive && (activeRouteProp === 'auto' || activeRouteProp === 'exact')) {\r\n              hadAnyActiveLink = true;\r\n              return;\r\n            }\r\n\r\n            try {\r\n              const url = new URL(linklist.url);\r\n              const score = compareRoutes(compareUrl, url, activeRouteProp as 'auto' | 'exact');\r\n              if (score > 0) {\r\n                if (score === Infinity) hadAnyActiveLink = true;\r\n\r\n                // Push score\r\n                scoreList.push({\r\n                  main: mainNav,\r\n                  sub: linklist,\r\n                  score,\r\n                });\r\n              }\r\n            } catch {\r\n              // Not a valid URL, continue\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  return scoreList.sort((a, b) => b.score - a.score);\r\n};\r\n\r\n/**\r\n * Compare two URLs for similarity based on a match mode\r\n * @param baseUrl Browser URL\r\n * @param compareUrl Navigatgion URL\r\n * @param matchMode exact or auto matching\r\n * @returns Score\r\n */\r\nexport const compareRoutes = (\r\n  baseUrl: URL,\r\n  compareUrl: URL,\r\n  matchMode?: 'auto' | 'exact',\r\n): number => {\r\n  // One url is not defined or they don't share the same orign\r\n  if (!baseUrl || !compareUrl || baseUrl.origin !== compareUrl.origin) {\r\n    return 0;\r\n  }\r\n\r\n  // Exact match, origin and pathname are the same\r\n  if (baseUrl.pathname === compareUrl.pathname) {\r\n    return Infinity;\r\n  }\r\n\r\n  // The basepath is longer than the comparison, a match is impossible\r\n  if (baseUrl.pathname.length < compareUrl.pathname.length) {\r\n    return 0;\r\n  }\r\n\r\n  if (matchMode === 'auto') {\r\n    const baseSegments = [baseUrl.origin, ...baseUrl.pathname.split('/').filter(x => !!x)];\r\n    const compareSegments = [compareUrl.origin, ...compareUrl.pathname.split('/').filter(x => !!x)];\r\n\r\n    const score = getSimilarityScore(baseSegments, compareSegments);\r\n\r\n    // If only some segments match, but not the whole smaller array, it's not a match\r\n    return Math.min(baseSegments.length, compareSegments.length) === score ? score : 0;\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\n/**\r\n * Check how many items in an array match\r\n * @param a Base array\r\n * @param b Compare array\r\n * @returns Score\r\n */\r\nexport const getSimilarityScore = (a: string[], b: string[]): number => {\r\n  if (!a?.length || !b?.length) {\r\n    return 0;\r\n  }\r\n\r\n  let i = 0;\r\n  for (; i < Math.min(a.length, b.length); i++) {\r\n    if (a[i] !== b[i]) {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  return i;\r\n};\r\n","import {\r\n  Environment,\r\n  IPortalConfig,\r\n  ILocalizedConfig,\r\n  ICustomConfig,\r\n  ILocalizedCustomConfig,\r\n  LocalizedConfigParameters,\r\n} from '../models/general.model';\r\nimport { NavMainEntity } from '../models/header.model';\r\nimport { getUserLang, persistLanguageChoice } from './language.service';\r\nimport { uniqueId } from '../utils/utils';\r\nimport { markActiveRoute } from './route.service';\r\n\r\n// Prevent double requests\r\nlet request: Promise<IPortalConfig> | null = null;\r\n\r\n// Cache the original os flyout to use it for updates\r\nlet osFlyoutCache: NavMainEntity | null = null;\r\n\r\n/**\r\n * Get a localized config object\r\n *\r\n * @param projectId String identifying the project\r\n * @param language [optional] Preferred language\r\n * @returns Localized config object\r\n */\r\nexport const getLocalizedConfig = async ({\r\n  projectId,\r\n  environment,\r\n  language,\r\n  cookieKey,\r\n  localStorageKey,\r\n  activeRouteProp,\r\n  localizedCustomConfig,\r\n  osFlyoutOverrides,\r\n}: LocalizedConfigParameters): Promise<ILocalizedConfig> => {\r\n  if (!request) {\r\n    request = fetchConfig(projectId, environment);\r\n  }\r\n\r\n  const config = await request;\r\n  const lang = getUserLang(Object.keys(config), language, localStorageKey, cookieKey);\r\n\r\n  if (lang === undefined) {\r\n    throw new Error('Internet Header: unable to determine current language');\r\n  }\r\n\r\n  // Clone config for more predictable state updates\r\n  let localizedConfig: ILocalizedConfig = { ...config[lang] };\r\n\r\n  // Merge custom config with portal config\r\n  if (localizedCustomConfig) {\r\n    const header = localizedCustomConfig?.header?.navMain\r\n      ? {\r\n          ...localizedConfig.header,\r\n          navMain: [...localizedConfig.header.navMain, ...localizedCustomConfig.header.navMain],\r\n        }\r\n      : localizedConfig.header;\r\n    localizedConfig = {\r\n      ...localizedConfig,\r\n      header,\r\n    };\r\n  }\r\n\r\n  // Add entries to flyout_os\r\n  if (osFlyoutOverrides)\r\n    localizedConfig.header.navMain = mergeOsFlyoutOverrides(localizedConfig, osFlyoutOverrides);\r\n\r\n  // Mark active route\r\n  if (activeRouteProp)\r\n    localizedConfig.header.navMain = markActiveRoute(\r\n      localizedConfig.header.navMain,\r\n      activeRouteProp,\r\n    );\r\n\r\n  setMainNavigationIds(localizedConfig?.header?.navMain);\r\n\r\n  // Set the new language choice\r\n  persistLanguageChoice(lang, cookieKey, localStorageKey);\r\n\r\n  return localizedConfig;\r\n};\r\n\r\n/**\r\n * Merge portal config with custom os flyout overrides\r\n * @param config Localized config\r\n * @param osFlyoutOverrides Overrides for the flyout\r\n * @returns Merged localized config\r\n */\r\nexport const mergeOsFlyoutOverrides = (\r\n  config: ILocalizedConfig,\r\n  osFlyoutOverrides: NavMainEntity,\r\n): NavMainEntity[] => {\r\n  if (!osFlyoutOverrides) return config.header.navMain;\r\n\r\n  return config.header.navMain.map(mainNav => {\r\n    if (mainNav.id !== 'flyout_os') return mainNav;\r\n\r\n    if (osFlyoutCache === null) {\r\n      osFlyoutCache = JSON.parse(JSON.stringify(mainNav)) as NavMainEntity;\r\n    }\r\n\r\n    const mainNavText = osFlyoutOverrides.text ?? osFlyoutCache.text;\r\n    const mainNavTitle = osFlyoutOverrides.title ?? osFlyoutCache.title;\r\n\r\n    if (\r\n      !osFlyoutCache.flyout ||\r\n      osFlyoutCache.flyout.length === 0 ||\r\n      !osFlyoutOverrides.flyout ||\r\n      osFlyoutOverrides.flyout.length === 0\r\n    )\r\n      return {\r\n        ...mainNav,\r\n        title: mainNavTitle,\r\n        text: mainNavText,\r\n      };\r\n\r\n    // Add entries for os flyout columns without overriding existing config\r\n    const mainNavFlyout = [\r\n      ...osFlyoutCache.flyout.map((col, index) => {\r\n        const overrides = osFlyoutOverrides.flyout[index];\r\n        const title = overrides.title ?? col.title;\r\n\r\n        const linkList = overrides.linkList ? osFlyoutOverrides.flyout[index].linkList : [];\r\n\r\n        return {\r\n          title,\r\n          linkList: [...col.linkList, ...linkList],\r\n        };\r\n      }),\r\n      ...osFlyoutOverrides.flyout.slice(osFlyoutCache.flyout.length),\r\n    ];\r\n\r\n    return {\r\n      ...mainNav,\r\n      text: mainNavText,\r\n      title: mainNavTitle,\r\n      flyout: mainNavFlyout,\r\n    } as NavMainEntity;\r\n  });\r\n};\r\n\r\n/**\r\n * Fetch the general config based on project id\r\n *\r\n * @returns Promise for Post Portal general config\r\n */\r\nexport const fetchConfig = async (\r\n  projectId: string,\r\n  environment: Environment,\r\n): Promise<IPortalConfig> => {\r\n  // Check if project id is sanitized\r\n  if (!isValidProjectId(projectId)) {\r\n    throw new Error(`Internet Header: invalid project id \"${projectId}\"`);\r\n  }\r\n\r\n  if (projectId === 'test') {\r\n    environment = 'int01';\r\n  }\r\n\r\n  let url = generateConfigUrl(projectId, environment);\r\n\r\n  // Get the config if cache is invalid\r\n  try {\r\n    const res = await fetch(url);\r\n    return (await res.json()) as IPortalConfig;\r\n  } catch (error) {\r\n    throw new Error(`Internet Header: fetching config failed. ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Generate an URL with all necessary query params to get the configuration.\r\n * Project id \"test\" will return a test configuration\r\n * @param projectId string\r\n * @param environment int01, int02 or prod\r\n * @returns URL pointing to the project config\r\n */\r\nexport const generateConfigUrl = (projectId: string, environment: Environment): string => {\r\n  if (projectId === 'test') return 'assets/config/test-configuration.json';\r\n\r\n  const parsedEnvironment = environment.toLowerCase();\r\n  const isProd = parsedEnvironment === 'prod';\r\n  const host = `https://${isProd ? 'www' : 'int'}.post.ch`;\r\n  try {\r\n    // Use URL to validate the generated URL\r\n    return new URL(\r\n      `${host}/api/headerjs/Json?serviceid=${encodeURIComponent(projectId)}${\r\n        !isProd ? '&environment=' + parsedEnvironment : ''\r\n      }`,\r\n    ).toString();\r\n  } catch (error) {\r\n    throw new Error(`Internet Header: Config URL is invalid.`);\r\n  }\r\n};\r\n\r\n/**\r\n * Check if project id contains only URL safe characters\r\n *\r\n * @param projectId Project Id string\r\n * @returns The valid project id\r\n */\r\nexport const isValidProjectId = (projectId: string): boolean => {\r\n  return projectId !== '' && projectId.length > 0 && /^[a-zA-Z][\\w-]*[a-zA-Z0-9]$/.test(projectId);\r\n};\r\n\r\n/**\r\n * Get the localized config object from a custom config\r\n *\r\n * @param config String or json object of the custom config\r\n * @param language Specific language\r\n * @returns Localized custom config object\r\n */\r\nexport const getLocalizedCustomConfig = (\r\n  config: string | ICustomConfig,\r\n  language: string,\r\n): ILocalizedCustomConfig | undefined => {\r\n  let customConfig: ICustomConfig;\r\n  try {\r\n    customConfig = typeof config === 'string' ? JSON.parse(config) : config;\r\n  } catch (error) {\r\n    throw new Error(\r\n      `Internet Header: Custom config is invalid. Make sure your custom config contains valid JSON syntax and matches the definition. `,\r\n    );\r\n  }\r\n  let localizedCustomConfig: ILocalizedCustomConfig | undefined = customConfig[language];\r\n  if (localizedCustomConfig?.header?.navMain)\r\n    setMainNavigationIds(localizedCustomConfig.header.navMain);\r\n  return localizedCustomConfig;\r\n};\r\n\r\n/**\r\n * Check if mobile header styles are applied or not\r\n * @returns True if browser is smaller than 1024px\r\n */\r\nexport const isMobile = () => window.innerWidth < 1024;\r\n\r\n/**\r\n * Set unique ID's on main navigation entities but conserve flyout_os to be able to\r\n * identify the online-service flyout, which can be configured by osFlyoutOverrides\r\n */\r\nexport const setMainNavigationIds = (navMainEntities: NavMainEntity[]): void => {\r\n  navMainEntities.forEach(navMainEntity => {\r\n    navMainEntity.id = navMainEntity.id === 'flyout_os' ? navMainEntity.id : uniqueId('main-nav-');\r\n  });\r\n};\r\n","@use '@swisspost/design-system-styles/variables/color';\r\n@use '../../utils/utils.scss';\r\n@use '../../utils/mixins.scss';\r\n\r\n:host {\r\n  display: block;\r\n  position: relative;\r\n  font-size: 1rem;\r\n  font-weight: 300;\r\n  z-index: var(--header-z-index, 10);\r\n\r\n  --header-height: 3.5rem; // 56px\r\n  --meta-header-height: 0px; // Not visible on mobile\r\n  --language-dropdown-margin-top: 0px;\r\n\r\n  @include mixins.min(lg) {\r\n    --meta-header-height: 3rem; // 48px\r\n    --header-height: 4rem; // 64px\r\n  }\r\n\r\n  @include mixins.min(xl) {\r\n    --header-height: 4.5rem; // 72px\r\n  }\r\n}\r\n\r\n// Set height to 0 if meta is never visible\r\n:host([meta='false']) {\r\n  --meta-header-height: 0px;\r\n  // Compensation for header border-bottom, when language dropdown is displayed within main navigation controls\r\n  --language-dropdown-margin-top: 1px;\r\n}\r\n\r\n// Support different kinds of stickyness modes\r\n// Works only in combination with setting header heights dynamically\r\n@supports (position: sticky) {\r\n  // If stickyness is none, simply apply no styles, all others are sticky\r\n  :host(:not(.stickyness-none)) {\r\n    position: sticky;\r\n  }\r\n\r\n  // Everything is always sticky\r\n  :host(.stickyness-full) {\r\n    top: 0;\r\n  }\r\n\r\n  // Only main nav is sticky\r\n  :host(.stickyness-main) {\r\n    top: calc(var(--meta-header-height, 0px) * -1);\r\n  }\r\n\r\n  // Hide everything\r\n  :host(.stickyness-minimal) {\r\n    top: calc((var(--header-height, 0px) + var(--meta-header-height, 0px)) * -1);\r\n    transition: top 200ms ease-in;\r\n  }\r\n\r\n  // Show main when scrolling up or any of the menus are open\r\n  :host(.stickyness-minimal.scrolling-up),\r\n  :host(.stickyness-minimal.dropdown-open) {\r\n    top: calc(var(--meta-header-height, 0px) * -1);\r\n    transition: top 200ms ease-out;\r\n  }\r\n}\r\n\r\n.post-internet-header {\r\n  border-bottom: 1px solid color.$gray-10;\r\n  background-color: white;\r\n}\r\n\r\n.main-navigation-container {\r\n  display: flex;\r\n\r\n  & > .main-navigation-controls {\r\n    flex: 0 0 auto;\r\n  }\r\n}\r\n\r\n.main-navigation {\r\n  display: flex;\r\n}\r\n\r\n.sub-navigation-container {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  background: white;\r\n  visibility: hidden;\r\n}\r\n\r\n.main-navigation-item:hover .sub-navigation-container {\r\n  visibility: visible;\r\n}\r\n\r\n.main-navigation-controls {\r\n  display: flex;\r\n  margin-left: auto;\r\n\r\n  @include mixins.max(lg) {\r\n    font-weight: 400;\r\n  }\r\n\r\n  @include mixins.min(lg) {\r\n    font-size: 1.0625rem;\r\n  }\r\n\r\n  & > * {\r\n    border-left: 1px solid color.$gray-10;\r\n  }\r\n}\r\n\r\n.menu-button {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 calc(1rem - 1px);\r\n  font-weight: 300;\r\n  cursor: pointer;\r\n  border-left: 1px solid color.$gray-10;\r\n  order: 1; /* Display on the far right because of tab order */\r\n\r\n  @include mixins.min(lg) {\r\n    display: none;\r\n  }\r\n\r\n  .visually-hidden {\r\n    @include mixins.between(rg, lg) {\r\n      @include mixins.reset-visually-hidden();\r\n\r\n      margin-right: 0.5rem;\r\n    }\r\n  }\r\n\r\n  svg {\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n  }\r\n}\r\n\r\n.full-width {\r\n  .wide-container {\r\n    max-width: none;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Element,\r\n  h,\r\n  State,\r\n  Prop,\r\n  Watch,\r\n  Listen,\r\n  EventEmitter,\r\n  Event,\r\n  Method,\r\n} from '@stencil/core';\r\nimport { debounce, throttle } from 'throttle-debounce';\r\nimport {\r\n  getLocalizedConfig,\r\n  getLocalizedCustomConfig,\r\n  isValidProjectId,\r\n} from '../../services/config.service';\r\nimport { state, dispose } from '../../data/store';\r\nimport { DropdownElement, DropdownEvent, NavMainEntity } from '../../models/header.model';\r\nimport { SvgSprite } from '../../utils/svg-sprite.component';\r\nimport { SvgIcon } from '../../utils/svg-icon.component';\r\nimport { StickynessOptions } from '../../models/implementor.model';\r\nimport { ActiveRouteProp, Environment, ICustomConfig } from '../../models/general.model';\r\nimport { IAvailableLanguage } from '../../models/language.model';\r\nimport { If } from '../../utils/if.component';\r\nimport packageJson from '../../../package.json';\r\n\r\n@Component({\r\n  tag: 'swisspost-internet-header',\r\n  styleUrl: 'post-internet-header.scss',\r\n  shadow: true,\r\n})\r\nexport class PostInternetHeader {\r\n  /**\r\n   * Your project id, previously passed as query string parameter serviceId.\r\n   */\r\n  @Prop() project: string;\r\n\r\n  /**\r\n   * Sticky behaviour of the header.\r\n   */\r\n  @Prop() stickyness: StickynessOptions = 'minimal';\r\n\r\n  /**\r\n   * Initial language to be used. Overrides automatic language detection.\r\n   */\r\n  @Prop() language?: string;\r\n\r\n  /**\r\n   * Toggle the meta navigation.\r\n   */\r\n  @Prop() meta: boolean = true;\r\n\r\n  /**\r\n   * Toggle the login link (when logged out) or the user widget (when logged in).\r\n   */\r\n  @Prop() login: boolean = true;\r\n\r\n  /**\r\n   * Toggle the search button.\r\n   */\r\n  @Prop() search: boolean = true;\r\n\r\n  /**\r\n   * Toggle skiplinks. They help keyboard users to quickly jump to important sections of the page.\r\n   */\r\n  @Prop() skiplinks: boolean = true;\r\n\r\n  /**\r\n   * DEPRECATED!: Define a proxy URL for the config fetch request. Will be removed in the next major version\r\n   */\r\n  @Prop() configProxy?: string;\r\n\r\n  /**\r\n   * Target environment. Choose 'int01' for local testing.\r\n   */\r\n  @Prop() environment: Environment = 'prod';\r\n\r\n  /**\r\n   * Override the language switch links with custom URLs. Helpful when your application contains sub-pages and you\r\n   * would like to stay on subpages when the user changes language.\r\n   */\r\n  @Prop() languageSwitchOverrides?: string | IAvailableLanguage[];\r\n\r\n  /**\r\n   * Customize the header config loaded from the post portal.\r\n   */\r\n  @Prop() customConfig?: string | ICustomConfig;\r\n\r\n  /**\r\n   * The header uses this cookie to set the language. Disables automatic language detection.\r\n   */\r\n  @Prop() languageCookieKey?: string;\r\n\r\n  /**\r\n   * The header uses this local storage key to set the language. Disables automatic language selection.\r\n   */\r\n  @Prop() languageLocalStorageKey?: string = 'swisspost-internet-header-language';\r\n\r\n  /**\r\n   * Set the currently activated route. If there is a link matching this URL in the header, it will be highlighted.\r\n   * Will also highlight partly matching URLs. When set to auto, will use current location.href for comparison.\r\n   */\r\n  @Prop() activeRoute?: 'auto' | false | string = 'auto';\r\n\r\n  /**\r\n   * Online Services only: Add custom links to the special online service navigation entry\r\n   */\r\n  @Prop() osFlyoutOverrides?: string | NavMainEntity;\r\n\r\n  /**\r\n   * Displays the header at full width for full-screen applications\r\n   */\r\n  @Prop() fullWidth?: boolean = false;\r\n\r\n  /**\r\n   * Fires when the header has been rendered to the page.\r\n   */\r\n  @Event() headerLoaded: EventEmitter<void>;\r\n\r\n  @State() activeFlyout: string | null = null;\r\n  @State() activeDropdownElement: DropdownElement | null = null;\r\n  @Element() host: HTMLElement;\r\n\r\n  /**\r\n   * Get the currently set language as a two letter string (\"de\", \"fr\" \"it\" or \"en\")\r\n   * @returns string\r\n   */\r\n  @Method()\r\n  async getCurrentLanguage(): Promise<'de' | 'fr' | 'it' | 'en' | string> {\r\n    return state.currentLanguage ?? 'de';\r\n  }\r\n\r\n  private mainNav?: HTMLPostMainNavigationElement;\r\n  private lastScrollTop = window.scrollY || document.documentElement.scrollTop;\r\n  private throttledScroll: throttle<() => void>;\r\n  private debouncedResize: debounce<() => void>;\r\n  private lastWindowWidth: number = window.innerWidth;\r\n\r\n  constructor() {\r\n    if (this.project === undefined || this.project === '' || !isValidProjectId(this.project)) {\r\n      throw new Error(\r\n        `Internet Header project key is \"${this.project}\". Please provide a valid project key.`,\r\n      );\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.throttledScroll = throttle(300, () => this.handleScrollEvent());\r\n    this.debouncedResize = debounce(200, () => this.handleResize());\r\n    window.addEventListener('scroll', this.throttledScroll, { passive: true });\r\n    window.addEventListener('resize', this.debouncedResize, { passive: true });\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    window.removeEventListener('scroll', this.throttledScroll);\r\n    window.removeEventListener('resize', this.debouncedResize);\r\n\r\n    // Reset the store to its original state\r\n    dispose();\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    // Wait for the config to arrive, then render the header\r\n    try {\r\n      state.projectId = this.project;\r\n      state.environment = this.environment;\r\n      if (this.language !== undefined) state.currentLanguage = this.language;\r\n      state.languageSwitchOverrides =\r\n        typeof this.languageSwitchOverrides === 'string'\r\n          ? JSON.parse(this.languageSwitchOverrides)\r\n          : this.languageSwitchOverrides;\r\n      state.osFlyoutOverrides =\r\n        typeof this.osFlyoutOverrides === 'string'\r\n          ? JSON.parse(this.osFlyoutOverrides)\r\n          : this.osFlyoutOverrides;\r\n\r\n      if (this.customConfig !== undefined && state.currentLanguage !== null) {\r\n        state.localizedCustomConfig = getLocalizedCustomConfig(\r\n          this.customConfig,\r\n          state.currentLanguage,\r\n        );\r\n      }\r\n\r\n      state.localizedConfig = await getLocalizedConfig({\r\n        projectId: this.project,\r\n        environment: this.environment,\r\n        language: this.language,\r\n        cookieKey: this.languageCookieKey,\r\n        localStorageKey: this.languageLocalStorageKey,\r\n        activeRouteProp: this.activeRoute,\r\n        localizedCustomConfig: state.localizedCustomConfig,\r\n        osFlyoutOverrides: state.osFlyoutOverrides,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  componentDidLoad() {\r\n    window.requestAnimationFrame(() => {\r\n      this.handleResize();\r\n      this.headerLoaded.emit();\r\n      this.host.classList.add('header-loaded');\r\n    });\r\n  }\r\n\r\n  @Watch('language')\r\n  async handleLanguageChange(newValue: string) {\r\n    state.currentLanguage = newValue;\r\n    state.localizedConfig = await getLocalizedConfig({\r\n      projectId: this.project,\r\n      environment: this.environment,\r\n      language: newValue,\r\n      cookieKey: this.languageCookieKey,\r\n      localStorageKey: this.languageLocalStorageKey,\r\n      activeRouteProp: this.activeRoute,\r\n      localizedCustomConfig: state.localizedCustomConfig,\r\n      osFlyoutOverrides: state.osFlyoutOverrides,\r\n    });\r\n    if (this.customConfig)\r\n      state.localizedCustomConfig = getLocalizedCustomConfig(this.customConfig, newValue);\r\n  }\r\n\r\n  @Watch('languageSwitchOverrides')\r\n  handleAvailableLanguagesChage(newValue: string | IAvailableLanguage[]) {\r\n    state.languageSwitchOverrides = typeof newValue === 'string' ? JSON.parse(newValue) : newValue;\r\n  }\r\n\r\n  @Watch('osFlyoutOverrides')\r\n  async handleOsFlyoutOverrides(newValue: string | NavMainEntity) {\r\n    state.osFlyoutOverrides = typeof newValue === 'string' ? JSON.parse(newValue) : newValue;\r\n    state.localizedConfig = await getLocalizedConfig({\r\n      projectId: this.project,\r\n      environment: this.environment,\r\n      language: this.language,\r\n      cookieKey: this.languageCookieKey,\r\n      localStorageKey: this.languageLocalStorageKey,\r\n      activeRouteProp: this.activeRoute,\r\n      localizedCustomConfig: state.localizedCustomConfig,\r\n      osFlyoutOverrides: state.osFlyoutOverrides,\r\n    });\r\n  }\r\n\r\n  @Watch('activeRoute')\r\n  async handleActiveRouteChange(newValue: string | ActiveRouteProp) {\r\n    state.localizedConfig = await getLocalizedConfig({\r\n      projectId: this.project,\r\n      environment: this.environment,\r\n      language: this.language,\r\n      cookieKey: this.languageCookieKey,\r\n      localStorageKey: this.languageLocalStorageKey,\r\n      activeRouteProp: newValue,\r\n      localizedCustomConfig: state.localizedCustomConfig,\r\n      osFlyoutOverrides: state.osFlyoutOverrides,\r\n    });\r\n  }\r\n\r\n  @Watch('customConfig')\r\n  async handleCustomConfigChange(newValue: string | ICustomConfig) {\r\n    if (this.language === undefined) return;\r\n    const localizedCustomConfig = getLocalizedCustomConfig(newValue, this.language);\r\n    state.localizedCustomConfig = localizedCustomConfig;\r\n    state.localizedConfig = await getLocalizedConfig({\r\n      projectId: this.project,\r\n      environment: this.environment,\r\n      language: this.language,\r\n      cookieKey: this.languageCookieKey,\r\n      localStorageKey: this.languageLocalStorageKey,\r\n      activeRouteProp: this.activeRoute,\r\n      localizedCustomConfig: localizedCustomConfig,\r\n      osFlyoutOverrides: state.osFlyoutOverrides,\r\n    });\r\n  }\r\n\r\n  @Watch('search')\r\n  handleSearchChange(newValue: boolean) {\r\n    state.search = newValue;\r\n  }\r\n\r\n  @Watch('login')\r\n  handleLoginChange(newValue: boolean) {\r\n    state.login = newValue;\r\n  }\r\n\r\n  @Watch('meta')\r\n  handleMetaChange(newValue: boolean) {\r\n    state.meta = newValue;\r\n  }\r\n\r\n  @Listen('languageChanged')\r\n  handleLanguageChangeEvent(event: CustomEvent<string>) {\r\n    this.handleLanguageChange(event.detail);\r\n  }\r\n\r\n  private handleClickOutsideBound = this.handleClickOutside.bind(this);\r\n\r\n  private handleClickOutside(event: Event) {\r\n    // Close active dropdown element on click outside of it\r\n    if (this.activeDropdownElement && !event.composedPath().includes(this.activeDropdownElement)) {\r\n      this.activeDropdownElement.toggleDropdown(false);\r\n    }\r\n  }\r\n\r\n  private handleKeyUp(event: KeyboardEvent) {\r\n    if (event.key === 'Escape') {\r\n      if (this.activeDropdownElement) {\r\n        this.activeDropdownElement.toggleDropdown(false);\r\n      }\r\n      if (this.activeFlyout !== null && this.mainNav) {\r\n        this.mainNav.toggleDropdown(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleScrollEvent() {\r\n    // Credits: \"https://github.com/qeremy/so/blob/master/so.dom.js#L426\"\r\n    const st = window.scrollY || document.documentElement.scrollTop;\r\n\r\n    // Toggle class without re-rendering the component if stickyness is minimal\r\n    // the other stickyness modes do not need the class\r\n    if (this.stickyness === 'minimal') {\r\n      this.host.classList.toggle('scrolling-up', st <= this.lastScrollTop);\r\n    }\r\n\r\n    // For Mobile or negative scrolling\r\n    this.lastScrollTop = st <= 0 ? 0 : st;\r\n  }\r\n\r\n  private handleResize() {\r\n    // Close main navigation dropdown if size changed to bigger than 1024px (search dropdown will be kept open)\r\n    if (this.isMainNavOpen() && this.lastWindowWidth < 1024 && window.innerWidth >= 1024) {\r\n      this.activeDropdownElement?.toggleDropdown(false);\r\n    }\r\n\r\n    this.lastWindowWidth = window.innerWidth;\r\n  }\r\n\r\n  /**\r\n   * Close open dropdown menus if another is being opened\r\n   *\r\n   * @param event Dropdown toggled event\r\n   * @returns void\r\n   */\r\n  private handleDropdownToggled(event: CustomEvent<DropdownEvent>) {\r\n    if (!event.detail.open && this.activeDropdownElement !== event.detail.element) {\r\n      // Some dropdown got closed programmatically (possibly by this function). To prevent\r\n      // a circle or an outdated state, we'll not handle this event\r\n      return;\r\n    }\r\n\r\n    if (event.detail.open === true) {\r\n      if (this.activeDropdownElement) {\r\n        this.activeDropdownElement.toggleDropdown(false);\r\n      }\r\n\r\n      this.activeDropdownElement = event.detail.element;\r\n\r\n      if (window.innerWidth >= 1024) {\r\n        // Add event listener to close active dropdown element on click outsite of it\r\n        // Also adds 10ms delay in case of an external interaction:\r\n        //    Some button on the page calls toggleDropdown() -> dropdown opens\r\n        //    Click event bubbles to the window, this.handleClickOutsideBound closes dropdown again\r\n        window.setTimeout(() => {\r\n          window.addEventListener('click', this.handleClickOutsideBound);\r\n        }, 10);\r\n      }\r\n\r\n      if (this.activeFlyout !== null && this.mainNav) {\r\n        this.mainNav.setActiveFlyout(null);\r\n      }\r\n    } else {\r\n      this.activeDropdownElement = null;\r\n\r\n      // Remove event listener as it is not needed if no dropdown element is active\r\n      window.removeEventListener('click', this.handleClickOutsideBound);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close open dropdowns if the flyout is being opened\r\n   * @param event Flyout toggle event\r\n   */\r\n  private handleFlyoutToggled(event: CustomEvent<string | null>) {\r\n    this.activeFlyout = event.detail;\r\n\r\n    if (this.activeDropdownElement && event.detail && !this.isMainNavOpen()) {\r\n      this.activeDropdownElement.toggleDropdown(false);\r\n    }\r\n  }\r\n\r\n  private toggleMobileDropdown() {\r\n    this.mainNav?.toggleDropdown();\r\n  }\r\n\r\n  private isMainNavOpen() {\r\n    return (\r\n      this.activeDropdownElement && this.activeDropdownElement.tagName === 'POST-MAIN-NAVIGATION'\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (!state.localizedConfig?.header) {\r\n      console.error(new Error('Internet Header: Config cannot be loaded'));\r\n      return;\r\n    }\r\n\r\n    const config = state.localizedConfig;\r\n    const renderMetaNavigation =\r\n      this.meta &&\r\n      config.header.navMeta !== undefined &&\r\n      config.header.navMeta?.filter(meta => !meta.isHomeLink).length > 0;\r\n    const renderLogin =\r\n      (this.login ?? !config.header.isLoginWidgetHidden) && config.header.loginWidgetOptions;\r\n    const renderLanguageSwitch = config.header.navLang.length > 1;\r\n\r\n    return (\r\n      <Host\r\n        class={`stickyness-${this.stickyness} ${\r\n          this.activeDropdownElement || this.activeFlyout ? 'dropdown-open' : ''\r\n        }`}\r\n        data-version={packageJson.version}\r\n        onKeyup={(e: KeyboardEvent) => this.handleKeyUp(e)}\r\n      >\r\n        <header class={`post-internet-header${this.fullWidth ? ' full-width' : ''}`}>\r\n          <SvgSprite />\r\n          <If condition={this.skiplinks === true}>\r\n            <post-skiplinks></post-skiplinks>\r\n          </If>\r\n          <If condition={renderMetaNavigation === true}>\r\n            <post-meta-navigation\r\n              orientation=\"horizontal\"\r\n              class=\"hidden-lg\"\r\n              full-width={this.fullWidth}\r\n            >\r\n              <If condition={renderLanguageSwitch === true}>\r\n                <post-language-switch\r\n                  id=\"post-language-switch-desktop\"\r\n                  mode=\"dropdown\"\r\n                  onDropdownToggled={e => this.handleDropdownToggled(e)}\r\n                ></post-language-switch>\r\n              </If>\r\n            </post-meta-navigation>\r\n          </If>\r\n          <div class=\"main-navigation-container wide-container\">\r\n            <post-logo></post-logo>\r\n            <button class=\"menu-button nav-link\" onClick={() => this.toggleMobileDropdown()}>\r\n              <span class=\"menu-button-text visually-hidden\">{config.header.mobileMenu.text}</span>\r\n              <SvgIcon name={this.isMainNavOpen() ? 'pi-close' : 'pi-menu'}></SvgIcon>\r\n            </button>\r\n            <post-main-navigation\r\n              onDropdownToggled={e => this.handleDropdownToggled(e)}\r\n              onFlyoutToggled={e => this.handleFlyoutToggled(e)}\r\n              ref={el => (this.mainNav = el)}\r\n            >\r\n              <If condition={renderMetaNavigation === true}>\r\n                <post-meta-navigation orientation=\"vertical\">\r\n                  <If condition={renderLanguageSwitch === true}>\r\n                    <post-language-switch\r\n                      id=\"post-language-switch-mobile\"\r\n                      mode=\"list\"\r\n                    ></post-language-switch>\r\n                  </If>\r\n                </post-meta-navigation>\r\n              </If>\r\n            </post-main-navigation>\r\n            <div class=\"main-navigation-controls\">\r\n              <If condition={this.search !== false}>\r\n                <post-search onDropdownToggled={e => this.handleDropdownToggled(e)}></post-search>\r\n              </If>\r\n              <If condition={!!renderLogin}>\r\n                <post-klp-login-widget>\r\n                  <slot name=\"login-widget\"></slot>\r\n                </post-klp-login-widget>\r\n              </If>\r\n              <If condition={renderMetaNavigation === false && renderLanguageSwitch === true}>\r\n                <post-language-switch\r\n                  id=\"post-language-switch-no-meta\"\r\n                  onDropdownToggled={e => this.handleDropdownToggled(e)}\r\n                  mode=\"dropdown\"\r\n                ></post-language-switch>\r\n              </If>\r\n              <slot name=\"main\"></slot>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}