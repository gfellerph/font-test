{"version":3,"file":"post-internet-header.js","sourceRoot":"","sources":["../../../../src/components/post-internet-header/post-internet-header.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  Host,\r\n  Element,\r\n  h,\r\n  State,\r\n  Prop,\r\n  Watch,\r\n  Listen,\r\n  EventEmitter,\r\n  Event,\r\n  Method,\r\n} from '@stencil/core';\r\nimport { debounce, throttle } from 'throttle-debounce';\r\nimport {\r\n  getLocalizedConfig,\r\n  getLocalizedCustomConfig,\r\n  isValidProjectId,\r\n} from '../../services/config.service';\r\nimport { state, dispose } from '../../data/store';\r\nimport { DropdownElement, DropdownEvent, NavMainEntity } from '../../models/header.model';\r\nimport { SvgSprite } from '../../utils/svg-sprite.component';\r\nimport { SvgIcon } from '../../utils/svg-icon.component';\r\nimport { StickynessOptions } from '../../models/implementor.model';\r\nimport { ActiveRouteProp, Environment, ICustomConfig } from '../../models/general.model';\r\nimport { IAvailableLanguage } from '../../models/language.model';\r\nimport { If } from '../../utils/if.component';\r\nimport packageJson from '../../../package.json';\r\n\r\n@Component({\r\n  tag: 'swisspost-internet-header',\r\n  styleUrl: 'post-internet-header.scss',\r\n  shadow: true,\r\n})\r\nexport class PostInternetHeader {\r\n  /**\r\n   * Your project id, previously passed as query string parameter serviceId.\r\n   */\r\n  @Prop() project: string;\r\n\r\n  /**\r\n   * Sticky behaviour of the header.\r\n   */\r\n  @Prop() stickyness: StickynessOptions = 'minimal';\r\n\r\n  /**\r\n   * Initial language to be used. Overrides automatic language detection.\r\n   */\r\n  @Prop() language?: string;\r\n\r\n  /**\r\n   * Toggle the meta navigation.\r\n   */\r\n  @Prop() meta: boolean = true;\r\n\r\n  /**\r\n   * Toggle the login link (when logged out) or the user widget (when logged in).\r\n   */\r\n  @Prop() login: boolean = true;\r\n\r\n  /**\r\n   * Toggle the search button.\r\n   */\r\n  @Prop() search: boolean = true;\r\n\r\n  /**\r\n   * Toggle skiplinks. They help keyboard users to quickly jump to important sections of the page.\r\n   */\r\n  @Prop() skiplinks: boolean = true;\r\n\r\n  /**\r\n   * DEPRECATED!: Define a proxy URL for the config fetch request. Will be removed in the next major version\r\n   */\r\n  @Prop() configProxy?: string;\r\n\r\n  /**\r\n   * Target environment. Choose 'int01' for local testing.\r\n   */\r\n  @Prop() environment: Environment = 'prod';\r\n\r\n  /**\r\n   * Override the language switch links with custom URLs. Helpful when your application contains sub-pages and you\r\n   * would like to stay on subpages when the user changes language.\r\n   */\r\n  @Prop() languageSwitchOverrides?: string | IAvailableLanguage[];\r\n\r\n  /**\r\n   * Customize the header config loaded from the post portal.\r\n   */\r\n  @Prop() customConfig?: string | ICustomConfig;\r\n\r\n  /**\r\n   * The header uses this cookie to set the language. Disables automatic language detection.\r\n   */\r\n  @Prop() languageCookieKey?: string;\r\n\r\n  /**\r\n   * The header uses this local storage key to set the language. Disables automatic language selection.\r\n   */\r\n  @Prop() languageLocalStorageKey?: string = 'swisspost-internet-header-language';\r\n\r\n  /**\r\n   * Set the currently activated route. If there is a link matching this URL in the header, it will be highlighted.\r\n   * Will also highlight partly matching URLs. When set to auto, will use current location.href for comparison.\r\n   */\r\n  @Prop() activeRoute?: 'auto' | false | string = 'auto';\r\n\r\n  /**\r\n   * Online Services only: Add custom links to the special online service navigation entry\r\n   */\r\n  @Prop() osFlyoutOverrides?: string | NavMainEntity;\r\n\r\n  /**\r\n   * Displays the header at full width for full-screen applications\r\n   */\r\n  @Prop() fullWidth?: boolean = false;\r\n\r\n  /**\r\n   * Fires when the header has been rendered to the page.\r\n   */\r\n  @Event() headerLoaded: EventEmitter<void>;\r\n\r\n  @State() activeFlyout: string | null = null;\r\n  @State() activeDropdownElement: DropdownElement | null = null;\r\n  @Element() host: HTMLElement;\r\n\r\n  /**\r\n   * Get the currently set language as a two letter string (\"de\", \"fr\" \"it\" or \"en\")\r\n   * @returns string\r\n   */\r\n  @Method()\r\n  async getCurrentLanguage(): Promise<'de' | 'fr' | 'it' | 'en' | string> {\r\n    return state.currentLanguage ?? 'de';\r\n  }\r\n\r\n  private mainNav?: HTMLPostMainNavigationElement;\r\n  private lastScrollTop = window.scrollY || document.documentElement.scrollTop;\r\n  private throttledScroll: throttle<() => void>;\r\n  private debouncedResize: debounce<() => void>;\r\n  private lastWindowWidth: number = window.innerWidth;\r\n\r\n  constructor() {\r\n    if (this.project === undefined || this.project === '' || !isValidProjectId(this.project)) {\r\n      throw new Error(\r\n        `Internet Header project key is \"${this.project}\". Please provide a valid project key.`,\r\n      );\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.throttledScroll = throttle(300, () => this.handleScrollEvent());\r\n    this.debouncedResize = debounce(200, () => this.handleResize());\r\n    window.addEventListener('scroll', this.throttledScroll, { passive: true });\r\n    window.addEventListener('resize', this.debouncedResize, { passive: true });\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    window.removeEventListener('scroll', this.throttledScroll);\r\n    window.removeEventListener('resize', this.debouncedResize);\r\n\r\n    // Reset the store to its original state\r\n    dispose();\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    // Wait for the config to arrive, then render the header\r\n    try {\r\n      state.projectId = this.project;\r\n      state.environment = this.environment;\r\n      if (this.language !== undefined) state.currentLanguage = this.language;\r\n      state.languageSwitchOverrides =\r\n        typeof this.languageSwitchOverrides === 'string'\r\n          ? JSON.parse(this.languageSwitchOverrides)\r\n          : this.languageSwitchOverrides;\r\n      state.osFlyoutOverrides =\r\n        typeof this.osFlyoutOverrides === 'string'\r\n          ? JSON.parse(this.osFlyoutOverrides)\r\n          : this.osFlyoutOverrides;\r\n\r\n      if (this.customConfig !== undefined && state.currentLanguage !== null) {\r\n        state.localizedCustomConfig = getLocalizedCustomConfig(\r\n          this.customConfig,\r\n          state.currentLanguage,\r\n        );\r\n      }\r\n\r\n      state.localizedConfig = await getLocalizedConfig({\r\n        projectId: this.project,\r\n        environment: this.environment,\r\n        language: this.language,\r\n        cookieKey: this.languageCookieKey,\r\n        localStorageKey: this.languageLocalStorageKey,\r\n        activeRouteProp: this.activeRoute,\r\n        localizedCustomConfig: state.localizedCustomConfig,\r\n        osFlyoutOverrides: state.osFlyoutOverrides,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  componentDidLoad() {\r\n    window.requestAnimationFrame(() => {\r\n      this.handleResize();\r\n      this.headerLoaded.emit();\r\n      this.host.classList.add('header-loaded');\r\n    });\r\n  }\r\n\r\n  @Watch('language')\r\n  async handleLanguageChange(newValue: string) {\r\n    state.currentLanguage = newValue;\r\n    state.localizedConfig = await getLocalizedConfig({\r\n      projectId: this.project,\r\n      environment: this.environment,\r\n      language: newValue,\r\n      cookieKey: this.languageCookieKey,\r\n      localStorageKey: this.languageLocalStorageKey,\r\n      activeRouteProp: this.activeRoute,\r\n      localizedCustomConfig: state.localizedCustomConfig,\r\n      osFlyoutOverrides: state.osFlyoutOverrides,\r\n    });\r\n    if (this.customConfig)\r\n      state.localizedCustomConfig = getLocalizedCustomConfig(this.customConfig, newValue);\r\n  }\r\n\r\n  @Watch('languageSwitchOverrides')\r\n  handleAvailableLanguagesChage(newValue: string | IAvailableLanguage[]) {\r\n    state.languageSwitchOverrides = typeof newValue === 'string' ? JSON.parse(newValue) : newValue;\r\n  }\r\n\r\n  @Watch('osFlyoutOverrides')\r\n  async handleOsFlyoutOverrides(newValue: string | NavMainEntity) {\r\n    state.osFlyoutOverrides = typeof newValue === 'string' ? JSON.parse(newValue) : newValue;\r\n    state.localizedConfig = await getLocalizedConfig({\r\n      projectId: this.project,\r\n      environment: this.environment,\r\n      language: this.language,\r\n      cookieKey: this.languageCookieKey,\r\n      localStorageKey: this.languageLocalStorageKey,\r\n      activeRouteProp: this.activeRoute,\r\n      localizedCustomConfig: state.localizedCustomConfig,\r\n      osFlyoutOverrides: state.osFlyoutOverrides,\r\n    });\r\n  }\r\n\r\n  @Watch('activeRoute')\r\n  async handleActiveRouteChange(newValue: string | ActiveRouteProp) {\r\n    state.localizedConfig = await getLocalizedConfig({\r\n      projectId: this.project,\r\n      environment: this.environment,\r\n      language: this.language,\r\n      cookieKey: this.languageCookieKey,\r\n      localStorageKey: this.languageLocalStorageKey,\r\n      activeRouteProp: newValue,\r\n      localizedCustomConfig: state.localizedCustomConfig,\r\n      osFlyoutOverrides: state.osFlyoutOverrides,\r\n    });\r\n  }\r\n\r\n  @Watch('customConfig')\r\n  async handleCustomConfigChange(newValue: string | ICustomConfig) {\r\n    if (this.language === undefined) return;\r\n    const localizedCustomConfig = getLocalizedCustomConfig(newValue, this.language);\r\n    state.localizedCustomConfig = localizedCustomConfig;\r\n    state.localizedConfig = await getLocalizedConfig({\r\n      projectId: this.project,\r\n      environment: this.environment,\r\n      language: this.language,\r\n      cookieKey: this.languageCookieKey,\r\n      localStorageKey: this.languageLocalStorageKey,\r\n      activeRouteProp: this.activeRoute,\r\n      localizedCustomConfig: localizedCustomConfig,\r\n      osFlyoutOverrides: state.osFlyoutOverrides,\r\n    });\r\n  }\r\n\r\n  @Watch('search')\r\n  handleSearchChange(newValue: boolean) {\r\n    state.search = newValue;\r\n  }\r\n\r\n  @Watch('login')\r\n  handleLoginChange(newValue: boolean) {\r\n    state.login = newValue;\r\n  }\r\n\r\n  @Watch('meta')\r\n  handleMetaChange(newValue: boolean) {\r\n    state.meta = newValue;\r\n  }\r\n\r\n  @Listen('languageChanged')\r\n  handleLanguageChangeEvent(event: CustomEvent<string>) {\r\n    this.handleLanguageChange(event.detail);\r\n  }\r\n\r\n  private handleClickOutsideBound = this.handleClickOutside.bind(this);\r\n\r\n  private handleClickOutside(event: Event) {\r\n    // Close active dropdown element on click outside of it\r\n    if (this.activeDropdownElement && !event.composedPath().includes(this.activeDropdownElement)) {\r\n      this.activeDropdownElement.toggleDropdown(false);\r\n    }\r\n  }\r\n\r\n  private handleKeyUp(event: KeyboardEvent) {\r\n    if (event.key === 'Escape') {\r\n      if (this.activeDropdownElement) {\r\n        this.activeDropdownElement.toggleDropdown(false);\r\n      }\r\n      if (this.activeFlyout !== null && this.mainNav) {\r\n        this.mainNav.toggleDropdown(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleScrollEvent() {\r\n    // Credits: \"https://github.com/qeremy/so/blob/master/so.dom.js#L426\"\r\n    const st = window.scrollY || document.documentElement.scrollTop;\r\n\r\n    // Toggle class without re-rendering the component if stickyness is minimal\r\n    // the other stickyness modes do not need the class\r\n    if (this.stickyness === 'minimal') {\r\n      this.host.classList.toggle('scrolling-up', st <= this.lastScrollTop);\r\n    }\r\n\r\n    // For Mobile or negative scrolling\r\n    this.lastScrollTop = st <= 0 ? 0 : st;\r\n  }\r\n\r\n  private handleResize() {\r\n    // Close main navigation dropdown if size changed to bigger than 1024px (search dropdown will be kept open)\r\n    if (this.isMainNavOpen() && this.lastWindowWidth < 1024 && window.innerWidth >= 1024) {\r\n      this.activeDropdownElement?.toggleDropdown(false);\r\n    }\r\n\r\n    this.lastWindowWidth = window.innerWidth;\r\n  }\r\n\r\n  /**\r\n   * Close open dropdown menus if another is being opened\r\n   *\r\n   * @param event Dropdown toggled event\r\n   * @returns void\r\n   */\r\n  private handleDropdownToggled(event: CustomEvent<DropdownEvent>) {\r\n    if (!event.detail.open && this.activeDropdownElement !== event.detail.element) {\r\n      // Some dropdown got closed programmatically (possibly by this function). To prevent\r\n      // a circle or an outdated state, we'll not handle this event\r\n      return;\r\n    }\r\n\r\n    if (event.detail.open === true) {\r\n      if (this.activeDropdownElement) {\r\n        this.activeDropdownElement.toggleDropdown(false);\r\n      }\r\n\r\n      this.activeDropdownElement = event.detail.element;\r\n\r\n      if (window.innerWidth >= 1024) {\r\n        // Add event listener to close active dropdown element on click outsite of it\r\n        // Also adds 10ms delay in case of an external interaction:\r\n        //    Some button on the page calls toggleDropdown() -> dropdown opens\r\n        //    Click event bubbles to the window, this.handleClickOutsideBound closes dropdown again\r\n        window.setTimeout(() => {\r\n          window.addEventListener('click', this.handleClickOutsideBound);\r\n        }, 10);\r\n      }\r\n\r\n      if (this.activeFlyout !== null && this.mainNav) {\r\n        this.mainNav.setActiveFlyout(null);\r\n      }\r\n    } else {\r\n      this.activeDropdownElement = null;\r\n\r\n      // Remove event listener as it is not needed if no dropdown element is active\r\n      window.removeEventListener('click', this.handleClickOutsideBound);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close open dropdowns if the flyout is being opened\r\n   * @param event Flyout toggle event\r\n   */\r\n  private handleFlyoutToggled(event: CustomEvent<string | null>) {\r\n    this.activeFlyout = event.detail;\r\n\r\n    if (this.activeDropdownElement && event.detail && !this.isMainNavOpen()) {\r\n      this.activeDropdownElement.toggleDropdown(false);\r\n    }\r\n  }\r\n\r\n  private toggleMobileDropdown() {\r\n    this.mainNav?.toggleDropdown();\r\n  }\r\n\r\n  private isMainNavOpen() {\r\n    return (\r\n      this.activeDropdownElement && this.activeDropdownElement.tagName === 'POST-MAIN-NAVIGATION'\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (!state.localizedConfig?.header) {\r\n      console.error(new Error('Internet Header: Config cannot be loaded'));\r\n      return;\r\n    }\r\n\r\n    const config = state.localizedConfig;\r\n    const renderMetaNavigation =\r\n      this.meta &&\r\n      config.header.navMeta !== undefined &&\r\n      config.header.navMeta?.filter(meta => !meta.isHomeLink).length > 0;\r\n    const renderLogin =\r\n      (this.login ?? !config.header.isLoginWidgetHidden) && config.header.loginWidgetOptions;\r\n    const renderLanguageSwitch = config.header.navLang.length > 1;\r\n\r\n    return (\r\n      <Host\r\n        class={`stickyness-${this.stickyness} ${\r\n          this.activeDropdownElement || this.activeFlyout ? 'dropdown-open' : ''\r\n        }`}\r\n        data-version={packageJson.version}\r\n        onKeyup={(e: KeyboardEvent) => this.handleKeyUp(e)}\r\n      >\r\n        <header class={`post-internet-header${this.fullWidth ? ' full-width' : ''}`}>\r\n          <SvgSprite />\r\n          <If condition={this.skiplinks === true}>\r\n            <post-skiplinks></post-skiplinks>\r\n          </If>\r\n          <If condition={renderMetaNavigation === true}>\r\n            <post-meta-navigation\r\n              orientation=\"horizontal\"\r\n              class=\"hidden-lg\"\r\n              full-width={this.fullWidth}\r\n            >\r\n              <If condition={renderLanguageSwitch === true}>\r\n                <post-language-switch\r\n                  id=\"post-language-switch-desktop\"\r\n                  mode=\"dropdown\"\r\n                  onDropdownToggled={e => this.handleDropdownToggled(e)}\r\n                ></post-language-switch>\r\n              </If>\r\n            </post-meta-navigation>\r\n          </If>\r\n          <div class=\"main-navigation-container wide-container\">\r\n            <post-logo></post-logo>\r\n            <button class=\"menu-button nav-link\" onClick={() => this.toggleMobileDropdown()}>\r\n              <span class=\"menu-button-text visually-hidden\">{config.header.mobileMenu.text}</span>\r\n              <SvgIcon name={this.isMainNavOpen() ? 'pi-close' : 'pi-menu'}></SvgIcon>\r\n            </button>\r\n            <post-main-navigation\r\n              onDropdownToggled={e => this.handleDropdownToggled(e)}\r\n              onFlyoutToggled={e => this.handleFlyoutToggled(e)}\r\n              ref={el => (this.mainNav = el)}\r\n            >\r\n              <If condition={renderMetaNavigation === true}>\r\n                <post-meta-navigation orientation=\"vertical\">\r\n                  <If condition={renderLanguageSwitch === true}>\r\n                    <post-language-switch\r\n                      id=\"post-language-switch-mobile\"\r\n                      mode=\"list\"\r\n                    ></post-language-switch>\r\n                  </If>\r\n                </post-meta-navigation>\r\n              </If>\r\n            </post-main-navigation>\r\n            <div class=\"main-navigation-controls\">\r\n              <If condition={this.search !== false}>\r\n                <post-search onDropdownToggled={e => this.handleDropdownToggled(e)}></post-search>\r\n              </If>\r\n              <If condition={!!renderLogin}>\r\n                <post-klp-login-widget>\r\n                  <slot name=\"login-widget\"></slot>\r\n                </post-klp-login-widget>\r\n              </If>\r\n              <If condition={renderMetaNavigation === false && renderLanguageSwitch === true}>\r\n                <post-language-switch\r\n                  id=\"post-language-switch-no-meta\"\r\n                  onDropdownToggled={e => this.handleDropdownToggled(e)}\r\n                  mode=\"dropdown\"\r\n                ></post-language-switch>\r\n              </If>\r\n              <slot name=\"main\"></slot>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}