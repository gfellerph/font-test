{"version":3,"file":"header.model.js","sourceRoot":"","sources":["../../../src/models/header.model.ts"],"names":[],"mappings":"","sourcesContent":["import { EventEmitter } from '@stencil/core';\r\nimport { AdditionalAttribute } from './breadcrumbs.model';\r\nimport { Environment } from './general.model';\r\n\r\nexport interface IHeaderConfig {\r\n  asWebComponent: boolean;\r\n  isHeaderResponsive: boolean;\r\n  isLoginWidgetHidden: boolean;\r\n  showJobsLoginWidget: boolean;\r\n  icons: {\r\n    backArrowIcon: IIconConfig;\r\n    closeIcon: IIconConfig;\r\n    downArrowIcon: IIconConfig;\r\n    menuIcon: IIconConfig;\r\n    rightArrowIcon: IIconConfig;\r\n    searchIcon: IIconConfig;\r\n    loginIcon: IIconConfig;\r\n  };\r\n  loginWidgetOptions?: ILoginWidgetOptions;\r\n  loginWidgetId: string;\r\n  logo: ILogoConfig;\r\n  mobileMenu: {\r\n    text: string;\r\n  };\r\n  search: ISearchConfig;\r\n  onlineServiceId: string;\r\n  navMain: NavMainEntity[];\r\n  navMeta?: NavMetaEntity[];\r\n  navLang: NavLangEntity[];\r\n  translations: IHeaderTranslations;\r\n}\r\n\r\nexport interface IIconConfig {\r\n  name: string;\r\n  classes?: string[];\r\n  additionalAttributes?: AdditionalAttribute[];\r\n}\r\n\r\nexport interface ILoginWidgetOptions {\r\n  applicationId: string;\r\n  serviceId: string;\r\n  appLoginUrl: string;\r\n  currentLang: string;\r\n  environment?: Environment;\r\n  options: {\r\n    isDebugEnabled: boolean;\r\n    logoutTargetURL: string;\r\n  };\r\n  platform: {\r\n    endPoint: string;\r\n    notificationsEndPoint: string;\r\n    logoutURL: string;\r\n    keepAliveURL: string;\r\n    autoLoginURL: string;\r\n  };\r\n}\r\n\r\nexport interface ILogoConfig {\r\n  logoLink: string;\r\n  logoLinkTitle: string;\r\n  logoSvg: string;\r\n  logoText: string;\r\n}\r\n\r\nexport interface ISearchConfig {\r\n  isSearchHidden: boolean;\r\n  searchPageUrl: string;\r\n  redirectPattern: string;\r\n  searchBoxSuggestionsThreshold: string;\r\n  searchBoxSuggestionsAllNumber: string;\r\n  searchBoxSuggestionsCoveoNumber: string;\r\n  placesRedirectUrl: string;\r\n  packageTrackingRedirectUrl: string;\r\n  searchHubName: string;\r\n  searchPipelineName: string;\r\n  searchRecommendations: ISearchRecommendationContainer;\r\n}\r\n\r\nexport interface ISearchRecommendationContainer {\r\n  title: string;\r\n  links: ISearchRecommendation[];\r\n}\r\n\r\nexport interface ISearchRecommendation {\r\n  href: string;\r\n  inlineSvg: string;\r\n  label: string;\r\n  target: string;\r\n  additionalAttributes: Array<{ name: string; value: string }>;\r\n}\r\n\r\nexport interface NavMainEntity {\r\n  id?: string;\r\n  text: string;\r\n  title: string;\r\n  url: string;\r\n  isActive?: boolean;\r\n  isActiveOverride?: boolean;\r\n  noFlyout?: boolean;\r\n  flyout: FlyoutEntity[];\r\n}\r\n\r\nexport interface FlyoutEntity {\r\n  title: string;\r\n  linkList: LinkListEntity[];\r\n}\r\n\r\nexport interface LinkListEntity {\r\n  title: string;\r\n  url: string;\r\n  target?: string;\r\n  isActive?: boolean;\r\n  isActiveOverride?: boolean;\r\n}\r\n\r\nexport interface NavMetaEntity {\r\n  isActive: boolean;\r\n  isHomeLink: boolean;\r\n  target?: string;\r\n  text: string;\r\n  url: string;\r\n}\r\n\r\nexport interface NavLangEntity {\r\n  a11yLabel?: string;\r\n  isCurrent: boolean;\r\n  lang: string;\r\n  text: string;\r\n  title: string;\r\n  url?: string;\r\n}\r\n\r\nexport interface IHeaderTranslations {\r\n  backButtonText: string;\r\n  closeButtonText: string;\r\n  homeLinkTitle: string;\r\n  navLangAriaLabel: string;\r\n  navMainAriaLabel: string;\r\n  navMetaAriaLabel: string;\r\n  searchAriaLabel: string;\r\n  flyoutSearchBoxFloatingLabel: string;\r\n  searchPlaceholder: string;\r\n  searchSubmit: string;\r\n  searchToggle: string;\r\n  searchToggleExpanded: string;\r\n  searchA11yLabelClosed: string;\r\n  searchA11yLabelOpened: string;\r\n  mobileNavToggleClose: string;\r\n  mobileNavToggleOpen: string;\r\n  nonResponsiveHeader: string;\r\n  loginWidgetText?: string;\r\n}\r\n\r\nexport interface IsFocusable {\r\n  setFocus: () => void;\r\n}\r\n\r\nexport type FocusableElement = HTMLElement & IsFocusable;\r\n\r\nexport interface HasDropdown {\r\n  toggleDropdown: (force?: boolean) => Promise<boolean>;\r\n  dropdownToggled: EventEmitter<DropdownEvent>;\r\n}\r\n\r\nexport type DropdownElement = HTMLElement & HasDropdown;\r\n\r\nexport type DropdownEvent = { open: boolean; element: DropdownElement };\r\n\r\nexport interface ICustomHeaderConfig {\r\n  navMain: NavMainEntity[];\r\n}\r\n\r\nexport type MainNavScoreList = { main: NavMainEntity; sub?: LinkListEntity; score: number }[];\r\n"]}