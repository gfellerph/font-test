{"version":3,"file":"coveo.service.js","sourceRoot":"","sources":["../../../../src/services/search/coveo.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAEzC,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AACzC,OAAO,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AAEpD;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,mBAAmB,GAAG,KAAK,EAAE,KAAa,EAA8B,EAAE;;EACrF,IAAI,CAAA,MAAA,MAAA,KAAK,CAAC,eAAe,0CAAE,MAAM,0CAAE,MAAM,MAAK,SAAS;IAAE,OAAO,EAAE,CAAC;EACnE,MAAM,MAAM,GAAG,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC;EACnD,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;EACrE,MAAM,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,MAAM,KAAK,WAAW,KAAK,CAAC,eAAe,cAAc,MAAM,CAAC,aAAa,aAAa,MAAM,CAAC,kBAAkB,mBAAmB,YAAY,EAAE,CAAC;EAC7K,IAAI,gBAA+C,CAAC;EAEpD,IAAI;IACF,MAAM,aAAa,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE;MACrC,MAAM,EAAE,KAAK;MACb,OAAO,EAAE;QACP,aAAa,EAAE,UAAU,KAAK,EAAE;OACjC;KACF,CAAC,CAAC;IACH,MAAM,SAAS,GAAG,CAAC,MAAM,aAAa,CAAC,IAAI,EAAE,CAAkB,CAAC;IAChE,gBAAgB,GAAG,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,iCACtD,UAAU,KACb,WAAW,EAAE,gBAAgB,CAAC,UAAU,CAAC,UAAU,CAAC,IACpD,CAAC,CAAC;GACL;EAAC,OAAO,KAAK,EAAE;IACd,OAAO,CAAC,KAAK,CACX,yIAAyI,CAC1I,CAAC;GACH;EAED,OAAO,gBAAgB,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC;AAChE,CAAC,CAAC","sourcesContent":["import { state } from '../../data/store';\r\nimport { CoveoCompletion, CoveoResponse } from '../../models/coveo.model';\r\nimport { coveo } from './coveo.settings';\r\nimport { getSearchPageUrl } from './search.service';\r\n\r\n/**\r\n * Get suggestions from coveo\r\n * https://docs.coveo.com/en/1459/build-a-search-ui/get-query-suggestions#context-object\r\n *\r\n * @param query Search term\r\n * @returns\r\n */\r\nexport const getCoveoSuggestions = async (query: string): Promise<CoveoCompletion[]> => {\r\n  if (state.localizedConfig?.header?.search === undefined) return [];\r\n  const config = state.localizedConfig.header.search;\r\n  const { token, organisation } = coveo.environment[state.environment];\r\n  const url = `${coveo.url}?q=${query}&locale=${state.currentLanguage}&searchHub=${config.searchHubName}&pipeline=${config.searchPipelineName}&organizationId=${organisation}`;\r\n  let coveoCompletions: CoveoCompletion[] | undefined;\r\n\r\n  try {\r\n    const coveoResponse = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    const coveoJSON = (await coveoResponse.json()) as CoveoResponse;\r\n    coveoCompletions = coveoJSON.completions.map(completion => ({\r\n      ...completion,\r\n      redirectUrl: getSearchPageUrl(completion.expression),\r\n    }));\r\n  } catch (error) {\r\n    console.error(\r\n      'Connection to coveo failed. Did you add \"*.coveo.com\" to your connect-src content security policy and tried turning off your adblocker?',\r\n    );\r\n  }\r\n\r\n  return coveoCompletions === undefined ? [] : coveoCompletions;\r\n};\r\n"]}